{
  "id": "GToc9QTzJY1h1w3y",
  "meta": {
    "instanceId": "cba4a4a2eb5d7683330e2944837278938831ed3c042e20da6f5049c07ad14798",
    "templateCredsSetupCompleted": true
  },
  "name": "AI-Powered Research with Jina AI Deep Search",
  "tags": [],
  "nodes": [
    {
      "id": "c76a7993-e7b1-426e-bcb4-9a18d9c72b83",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -820,
        -140
      ],
      "parameters": {
        "color": 6,
        "width": 740,
        "height": 760,
        "content": "# **🚀 Leonard van Hemert가 개발함**  \n\n**FREE: Open Deep Research 2.0**을 사용해 주셔서 감사합니다! 🎉  \n\n이 워크플로는 **AI 기반 연구를 민주화**하기 위해 만들어졌으며, 고급 **자동화 지식 발견**을 **모두**에게 제공하여 **API 제한**이나 **비용 장벽** 없이 사용할 수 있게 했습니다.  \n\n이것이 유용하다고 생각되면, **LinkedIn에서 저와 연결**해 주시고 제 최신 AI 및 자동화 프로젝트를 업데이트받아 주세요!  \n\n🔗 **LinkedIn에서 저를 팔로우하세요**: [Leonard van Hemert](https://www.linkedin.com/in/leonard-van-hemert/)  \n\n**n8n 커뮤니티**의 지지를 진심으로 감사드리며, 이 워크플로를 어떻게 사용하고 개선하는지 기대됩니다! 🚀  \n\n즐거운 연구 되세요,  \n**Leonard van Hemert** 💡"
      },
      "typeVersion": 1
    },
    {
      "id": "5620b6b5-1485-43a8-9acd-3368147bd742",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -60,
        -140
      ],
      "parameters": {
        "width": 740,
        "height": 300,
        "content": "🚀 **무료: 오픈 딥 리서치 2.0**  \n완전히 자동화된 **AI 기반 연구 워크플로**를 사용하여 **지나 AI의 딥서치**로 구조화된, 사실 기반의 보고서를 생성합니다—**API 키가 필요하지 않습니다!**"
      },
      "typeVersion": 1
    },
    {
      "id": "dbe1cc91-34b4-4e5b-b404-dd86f47d1ebf",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -60,
        180
      ],
      "parameters": {
        "width": 740,
        "height": 440,
        "content": "## 🧠 **이 워크플로우가 어떻게 작동하는지**\n\n이 워크플로우는 **깊이 있는 연구와 보고서 생성**을 **Jina AI의 DeepSearch API**를 사용하여 자동화하며, **고급 지식 발견**을 **무료로** 접근 가능하게 합니다.  \n\n1️⃣ **사용자 입력 → AI 연구**  \n- 사용자가 **연구 쿼리**를 채팅을 통해 입력합니다.  \n- 워크플로우가 **쿼리**를 **Jina AI의 DeepSearch API**로 보내 **깊이 있는 분석**을 수행합니다.  \n\n2️⃣ **AI 기반 인사이트**  \n- DeepSearch가 관련 정보를 **검색**하고 **분석**합니다.  \n- 응답에는 **주요 인사이트, 구조화된 분석, 및 출처**가 포함됩니다.  \n\n3️⃣ **Markdown 형식 처리 및 정리**  \n- 응답이 **코드 노드**를 통해 전달되어 AI가 생성한 인사이트를 추출, 정리하고 **읽기 쉬운 Markdown 출력**으로 **형식화**합니다.  \n- URL이 적절히 형식화되며, 각주가 구조화되고 보고서가 쉽게 읽을 수 있도록 합니다.  \n\n4️⃣ **최종 출력**  \n- 최종 **잘 구조화된 연구 보고서**가 사용 준비 상태로, **완전히 자동화되고 무료**입니다!"
      },
      "typeVersion": 1
    },
    {
      "id": "42fd2f04-7d83-44c9-a41b-48860efbcf79",
      "name": "Jina AI DeepSearch Request",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        220,
        0
      ],
      "parameters": {
        "url": "https://deepsearch.jina.ai/v1/chat/completions",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"model\": \"jina-deepsearch-v1\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"You are an advanced AI researcher that provides precise, well-structured, and insightful reports based on deep analysis. Your responses are factual, concise, and highly relevant.\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Hi, how can I help you?\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Provide a deep and insightful analysis on: \\\"{{ $json.chatInput }}\\\". Ensure the response is well-structured, fact-based, and directly relevant to the topic, with no unnecessary information.\"\n    }\n  ],\n  \"stream\": true,\n  \"reasoning_effort\": \"low\"\n}",
        "sendBody": true,
        "specifyBody": "json"
      },
      "typeVersion": 4.2
    },
    {
      "id": "1b7b3bbe-2068-4d3a-a962-134bbb6ee516",
      "name": "User Research Query Input",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        0,
        0
      ],
      "webhookId": "8a4b05af-cd63-4692-9924-e35aaed5f077",
      "parameters": {
        "options": {}
      },
      "typeVersion": 1.1
    },
    {
      "id": "218cbfe2-78de-4b00-875a-51761ac9f5c7",
      "name": "Format & Clean AI Response",
      "type": "n8n-nodes-base.code",
      "position": [
        440,
        0
      ],
      "parameters": {
        "jsCode": "function extractAndFormatMarkdown(input) {\n    let extractedContent = [];\n\n    // Extract raw data string from n8n input\n    let rawData = input.first().json.data;\n\n    // Split into individual JSON strings\n    let jsonStrings = rawData.split(\"\\n\\ndata: \").map(s => s.replace(/^data: /, ''));\n\n    let lastContent = \"\";\n    \n    // Reverse loop to find the last \"content\" field\n    for (let i = jsonStrings.length - 1; i >= 0; i--) {\n        try {\n            let parsedChunk = JSON.parse(jsonStrings[i]);\n\n            if (parsedChunk.choices && parsedChunk.choices.length > 0) {\n                for (let j = parsedChunk.choices.length - 1; j >= 0; j--) {\n                    let choice = parsedChunk.choices[j];\n\n                    if (choice.delta && choice.delta.content) {\n                        lastContent = choice.delta.content.trim();\n                        break;\n                    }\n                }\n            }\n\n            if (lastContent) break; // Stop once the last content is found\n        } catch (error) {\n            console.error(\"Failed to parse JSON string:\", jsonStrings[i], error);\n        }\n    }\n\n    // Clean and format Markdown\n    lastContent = lastContent.replace(/\\[\\^(\\d+)\\]: (.*?)\\n/g, \"[$1]: $2\\n\");  // Format footnotes\n    lastContent = lastContent.replace(/\\[\\^(\\d+)\\]/g, \"[^$1]\");  // Inline footnotes\n    lastContent = lastContent.replace(/(https?:\\/\\/[^\\s]+)(?=[^]]*\\])/g, \"<$1>\");  // Format links\n\n    // Return formatted content as an array of objects (n8n expects this format)\n    return [{ text: lastContent.trim() }];\n}\n\n// Execute function and return formatted output\nreturn extractAndFormatMarkdown($input);\n"
      },
      "typeVersion": 2
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e03d69b5-3304-4f28-b99f-970d6fd1225b",
  "connections": {
    "User Research Query Input": {
      "main": [
        [
          {
            "node": "Jina AI DeepSearch Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format & Clean AI Response": {
      "main": [
        []
      ]
    },
    "Jina AI DeepSearch Request": {
      "main": [
        [
          {
            "node": "Format & Clean AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}