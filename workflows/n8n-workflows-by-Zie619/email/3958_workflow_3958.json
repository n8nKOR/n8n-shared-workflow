{
  "nodes": [
    {
      "id": "b9256d00-9dff-432a-a678-e71a4074b26c",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        -20,
        -160
      ],
      "webhookId": "06d29616-8fa9-42cf-8b5f-abe856083c75",
      "parameters": {
        "path": "06d29616-8fa9-42cf-8b5f-abe856083c75",
        "options": {},
        "httpMethod": "POST"
      },
      "typeVersion": 2
    },
    {
      "id": "2726dd28-5366-4c0e-ad16-bae6dc2cbc0b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -880,
        -200
      ],
      "parameters": {
        "color": 4,
        "width": 320,
        "height": 440,
        "content": "## 이것은 무엇을 하는가?\nObjective:\n\n새로운 고객을 위한 온보딩 프로세스를 간소화하여, 필요한 모든 자원과 지원을 제공합니다.\nTrigger: 새로운 고객이 추가될 때 웹훅 트리거나 CRM 트리거(예: HubSpot 또는 Salesforce)를 설정합니다.\n\nSend Welcome Email: Gmail 또는 SMTP 노드를 사용하여 고객에게 맞춤형 환영 이메일을 보냅니다.\n\nSchedule a Welcome Call: Calendar 노드(Google Calendar)를 사용하여 환영 통화에 대한 일정 이벤트를 자동으로 생성합니다.\n\nAssign a CSM: CRM 노드(예: HubSpot)를 사용하여 새로운 고객을 전담 CSM에게 할당합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "680bdd4e-f382-4d20-8197-a7d65454ce36",
      "name": "Try Again",
      "type": "n8n-nodes-base.set",
      "position": [
        1000,
        500
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "7ab380a2-a8d3-421c-ab4e-748ea8fb7904",
              "name": "response",
              "type": "string",
              "value": "Unable to perform task. Please try again."
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "1ab48997-7533-4572-86d5-980af557d09d",
      "name": "Success",
      "type": "n8n-nodes-base.set",
      "position": [
        1000,
        300
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "39c2f302-03be-4464-a17a-d7cc481d6d44",
              "name": "=response",
              "type": "string",
              "value": "={{$json.output}}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "4cb493a1-1eff-42ca-9c51-8f070fe3e9ba",
      "name": "Calendar Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "onError": "continueErrorOutput",
      "position": [
        412,
        400
      ],
      "parameters": {
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a calendar assistant. Your responsibilities include creating, getting, and deleting events in the user's calendar.\nIf no date is proposed, find the next available slot using \"Get Events\" and create an event using \"Create Event with Attendee\"\n\n**Calendar Management Tools**  \n   - Use \"Create Event with Attendee\" when an event includes a participant.     \n   - Use \"Get Events\" to fetch calendar schedules when requested.\n   - Use \"Delete Event\" to delete an event. You must use \"Get Events\" first to get the ID of the event to delete.\n   - Use \"Update Event\" to update an event. You must use \"Get Events\" first to get the ID of the event to update.\n\n## Final Notes\nHere is the current date/time: {{ $now }}\nIf a duration for an event isn't specified, assume it will be one hour."
        },
        "promptType": "define"
      },
      "typeVersion": 1.6
    },
    {
      "id": "8c088b37-1005-4bc4-bdf5-0558ccb0c873",
      "name": "Create Event with Attendee",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        320,
        620
      ],
      "parameters": {
        "end": "={{ $fromAI(\"eventEnd\") }}",
        "start": "={{ $fromAI(\"eventStart\") }}",
        "calendar": {
          "__rl": true,
          "mode": "id",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Calendar', ``, 'string') }}",
          "__regex": "(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "additionalFields": {
          "summary": "={{ $fromAI(\"eventTitle\") }}",
          "attendees": [
            "={{ $fromAI(\"eventAttendeeEmail\") }}"
          ]
        }
      },
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "90bjjmYqtg3hnvFM",
          "name": "Google Calendar account"
        }
      },
      "typeVersion": 1.3
    },
    {
      "id": "91a0e49a-888f-4511-94e7-e0166ce7dd58",
      "name": "Create Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        440,
        620
      ],
      "parameters": {
        "end": "={{ $fromAI(\"eventEnd\") }}",
        "start": "={{ $fromAI(\"eventStart\") }}",
        "calendar": {
          "__rl": true,
          "mode": "id",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Calendar', ``, 'string') }}",
          "__regex": "(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "additionalFields": {
          "summary": "={{ $fromAI(\"eventTitle\") }}",
          "attendees": []
        }
      },
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "90bjjmYqtg3hnvFM",
          "name": "Google Calendar account"
        }
      },
      "typeVersion": 1.3
    },
    {
      "id": "8cfb90e5-6108-4003-b048-271650d4bc6c",
      "name": "Get Events",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        560,
        620
      ],
      "parameters": {
        "options": {},
        "timeMax": "={{ $fromAI(\"dayBefore\",\"today plus 7 days\") }}",
        "timeMin": "={{ $fromAI(\"dayAfter\",\"today\") }}",
        "calendar": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $fromAI('Calendar', `sender's email`, 'string') }}"
        },
        "operation": "getAll"
      },
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "90bjjmYqtg3hnvFM",
          "name": "Google Calendar account"
        }
      },
      "typeVersion": 1.3
    },
    {
      "id": "c5cc3550-7d9a-43c9-8434-e1ab78f7f596",
      "name": "Delete Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        680,
        620
      ],
      "parameters": {
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "options": {},
        "calendar": {
          "__rl": true,
          "mode": "id",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Calendar', ``, 'string') }}",
          "__regex": "(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "operation": "delete"
      },
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "90bjjmYqtg3hnvFM",
          "name": "Google Calendar account"
        }
      },
      "typeVersion": 1.3
    },
    {
      "id": "7ce45da8-dc24-4634-9f48-3864165885cd",
      "name": "Update Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        800,
        620
      ],
      "parameters": {
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "calendar": {
          "__rl": true,
          "mode": "id",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Calendar', ``, 'string') }}",
          "__regex": "(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "operation": "update",
        "updateFields": {
          "end": "={{ $fromAI(\"endTime\") }}",
          "start": "={{ $fromAI(\"startTime\") }}"
        }
      },
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "90bjjmYqtg3hnvFM",
          "name": "Google Calendar account"
        }
      },
      "typeVersion": 1.3
    },
    {
      "id": "b46f24a4-719c-414e-94d9-ecfb1e7dfe39",
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        200,
        400
      ],
      "parameters": {
        "inputSource": "passthrough"
      },
      "typeVersion": 1.1
    },
    {
      "id": "aedbe138-ed51-4300-881b-6b58928f5bb4",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1520,
        160
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "1IOLtYX7aTspCAN8",
          "name": "OpenAI Pollup"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "a540ae6b-e1ee-4d91-988e-e60bae743377",
      "name": "calendarAgent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        1640,
        160
      ],
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id}}",
          "cachedResultName": "={{ $workflow.id}}"
        },
        "description": "Call this tool for any calendar action.",
        "workflowInputs": {
          "value": {},
          "schema": [],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "64979b9f-a29a-4c53-b87a-cec84e7ba1fe",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        1760,
        160
      ],
      "parameters": {
        "jsonSchemaExample": "{\n\t\"subject\": \"\",\n\t\"body\": \"\"\n}"
      },
      "typeVersion": 1.2
    },
    {
      "id": "359d7296-a8e9-494c-b519-cca62c0805df",
      "name": "Get list of owners",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        420,
        -60
      ],
      "parameters": {
        "url": "https://api.hubapi.com/crm/v3/owners",
        "options": {},
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "hubspotOAuth2Api"
      },
      "credentials": {
        "hubspotOAuth2Api": {
          "id": "qubiIFrowxvUdpu6",
          "name": "HubSpot account for node"
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "e8aab719-a5d9-4168-9c68-eea32c7d3ef4",
      "name": "Split Out owners",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        640,
        -60
      ],
      "parameters": {
        "options": {},
        "fieldToSplitOut": "results"
      },
      "typeVersion": 1
    },
    {
      "id": "5e44ea67-e2f9-4cea-a030-c452b8bb482f",
      "name": "Get current owner",
      "type": "n8n-nodes-base.filter",
      "position": [
        860,
        -60
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "7c6aec6e-66a9-4739-8a59-28f2ab1c4a26",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.email }}",
              "rightValue": "={{ $('Enter your company data here').item.json.sender_email }}"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "c03bd58c-7a42-4966-96e8-45928f745475",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -540,
        -200
      ],
      "parameters": {
        "color": 5,
        "width": 680,
        "height": 1340,
        "content": "## n8n 및 HubSpot에서 웹훅 설정하는 방법\n\n## 1. n8n에서 웹훅 설정\n\n### 1단계: 새 워크플로 생성\n- **n8n 대시보드**로 이동합니다.\n- **\"새 워크플로\"**를 클릭합니다.\n\n### 2단계: 웹훅 노드 추가\n- 새 노드를 추가하려면 **“+”** 아이콘을 클릭합니다.\n- **“Webhook”**을 검색하여 선택합니다.\n- **Webhook Method**를 설정합니다(보통 POST).\n- **Webhook URL path**를 정의합니다(예: `/hubspot-webhook`).\n- **\"Response Mode\"**를 설정합니다(예: \"On Received\").\n- 워크플로를 저장합니다.\n\n### 3단계: 웹훅 URL 설정\n- n8n에서 생성된 **Webhook URL**을 복사합니다. 예를 들어: https://your-n8n-domain/webhook/hubspot-webhook\n- 워크플로가 **활성** 상태인지 확인합니다.\n\n---\n\n## 2. HubSpot에서 웹훅 설정\n\n### 1단계: HubSpot에 로그인\n- **HubSpot 개발자 계정**에 로그인합니다(웹훅 설정에 필요).\n- **\"설정\" > \"통합\" > \"웹훅\"**으로 이동합니다.\n\n### 2단계: 새 웹훅 구독 생성\n- **“웹훅 생성”** 또는 처음인 경우 **“웹훅 추가”**를 클릭합니다.\n- 추적할 **이벤트**를 선택합니다(예: 연락처 생성, 폼 제출).\n- **Webhook URL**을 이전에 복사한 n8n Webhook URL로 설정합니다.\n- **“POST”**를 요청 방법으로 선택합니다.\n- 필요 시 **인증**을 설정합니다(비밀 키 설정 또는 OAuth 사용).\n\n### 3단계: 웹훅 테스트\n- HubSpot의 **“웹훅 테스트”** 기능을 사용하여 테스트 요청을 보냅니다.\n- n8n으로 전환하여 웹훅이 제대로 트리거되는지 확인합니다.\n\n---\n\n## 3. n8n에서 데이터 처리\n- 웹훅이 n8n에서 트리거되면 HubSpot에서 보낸 데이터를 볼 수 있습니다.\n- 이제 추가 노드를 추가하여 **데이터를 처리**할 수 있습니다(예: 데이터베이스에 저장, 이메일 보내기, 다른 앱에서 작업 수행).\n\n---\n\n## 4. 워크플로 활성화\n- 구성이 완료되면 워크플로를 **“활성”**으로 설정합니다.\n- 이렇게 하면 HubSpot에서 실시간 데이터를 받을 수 있습니다."
      },
      "typeVersion": 1
    },
    {
      "id": "3861fa49-909d-4591-a1b8-d7bdd20e6560",
      "name": "HubSpot Trigger",
      "type": "n8n-nodes-base.hubspotTrigger",
      "position": [
        -20,
        40
      ],
      "webhookId": "632f3fc8-b921-4697-ba12-037d5c7f8971",
      "parameters": {
        "eventsUi": {
          "eventValues": [
            {}
          ]
        },
        "additionalFields": {}
      },
      "credentials": {
        "hubspotDeveloperApi": {
          "id": "DVrqcbIPANwtlVSg",
          "name": "HubSpot Developer account for trigger"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "9051cc3d-06be-4238-998e-7cb938313d24",
      "name": "Enter your company data here",
      "type": "n8n-nodes-base.set",
      "position": [
        200,
        -60
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "11a8b9e9-a7ed-454a-9aef-a9137c0e17ea",
              "name": "company_name",
              "type": "string",
              "value": "Pollup Data Services"
            },
            {
              "id": "f2dcfe2e-3145-4a30-9731-0a8d02c7aa9a",
              "name": "sender_name",
              "type": "string",
              "value": "Thomas Vié"
            },
            {
              "id": "18b5c0bd-4e75-4b98-92fc-5fca90a8b680",
              "name": "sender_email",
              "type": "string",
              "value": "zeerobug@gmail.com"
            },
            {
              "id": "2c8de3ed-57dc-455b-bfa5-87a0d8d046d2",
              "name": "company_activity",
              "type": "string",
              "value": "Whether it’s automating recurring tasks, analysing data faster, or personalising customer interactions, we build bespoke AI agents to help your workforce work smarter."
            }
          ]
        }
      },
      "notesInFlow": true,
      "typeVersion": 3.4
    },
    {
      "id": "5260ec73-0733-47d1-af03-66ead128820e",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        -200
      ],
      "parameters": {
        "color": 4,
        "width": 400,
        "height": 320,
        "content": "귀하의 데이터와 귀하의 회사를 설정하세요  \n여기에 설정한 sender_email은 HubSpot에서 사용하는 것과 동일해야 합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "78e301c7-3146-4bd9-9546-9f8c5b46cac7",
      "name": "If a contact is created",
      "type": "n8n-nodes-base.if",
      "position": [
        1080,
        -60
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "b70f4699-008f-4924-8e69-af4fa69422a5",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $('Webhook').item.json.body[0].subscriptionType }}",
              "rightValue": "contact.creation"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "b575fed7-da03-412d-aa00-fcf0edc85ae2",
      "name": "Get all info about the contact",
      "type": "n8n-nodes-base.hubspot",
      "position": [
        1300,
        -60
      ],
      "parameters": {
        "contactId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Webhook').item.json.body[0].objectId }}"
        },
        "operation": "get",
        "authentication": "oAuth2",
        "additionalFields": {}
      },
      "credentials": {
        "hubspotOAuth2Api": {
          "id": "qubiIFrowxvUdpu6",
          "name": "HubSpot account for node"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "956a02eb-970b-49bd-b1a5-3eebf7acb852",
      "name": "Write a personalized message",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1552,
        -60
      ],
      "parameters": {
        "text": "=Your task is to write a personalized Welcome email to a recipient.\nWrite also to indicate him that he will receive shortly an invitation for a meeting to resolve his doubts. Use for that the calendarAgent.\nUse the \"Sender's calendar ID\" as the Calendar. And the \"Recipient email\" as an attendee\n\n## Tools\n- calendarAgent: Use this tool to take action in calendar. Send it a query like \"Schedule a meeting with attendee 'Recipient email' on 'Sender's calendar ID' calendar.\"\n\n## Rules\n- Some actions require you to look up contact information first. For the following actions, you must get contact information and send that to the agent who needs it:\n- creating calendar event with attendee, create it as son as there is some free slot\n\nreturn the message as a json like this one:{\"subject\":\"Subject of the message\",\"body\":\"Body of the message\"}\n\n## Use the variables below\nSender's name:  {{ $('Enter your company data here').item.json.sender_name }}\nSender's email: {{ $('Enter your company data here').item.json.sender_email }}\nSender's company name: {{ $('Enter your company data here').item.json.company_name }}\nSender's company activity: {{ $('Enter your company data here').item.json.company_activity }}\nSender's calendar ID: zeerobug@gmail.com\nRecipient first name: {{ $json.properties.firstname.value }}\nRecipient last name: {{ $json.properties.lastname }}\nRecipient email: {{ $json.properties.email.value }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a professional Customer Success Manager.\n"
        },
        "promptType": "define",
        "hasOutputParser": true
      },
      "typeVersion": 1.9
    },
    {
      "id": "6d392f67-5940-43ed-ac8d-d27f8dab91ed",
      "name": "Send the message",
      "type": "n8n-nodes-base.gmail",
      "position": [
        2180,
        -60
      ],
      "webhookId": "d1d18d77-71ad-4eab-91c6-08b6a9f5d736",
      "parameters": {
        "sendTo": "={{ $('Get all info about the contact').item.json.properties.email.value }}",
        "message": "={{ $json.data }}",
        "options": {
          "bccList": "thomas@pollup.net"
        },
        "subject": "={{ $json.output.subject }}"
      },
      "credentials": {
        "gmailOAuth2": {
          "id": "DLjspol9TLgpGaXa",
          "name": "Gmail account 2"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "1928e760-4ca1-443c-9de0-211b3c3c88b8",
      "name": "Set owner to contact",
      "type": "n8n-nodes-base.hubspot",
      "position": [
        2400,
        -60
      ],
      "parameters": {
        "email": "={{ $('Get all info about the contact').item.json.properties.email.value }}",
        "options": {},
        "authentication": "oAuth2",
        "additionalFields": {
          "contactOwner": "={{ $('Get current owner').item.json.id }}"
        }
      },
      "credentials": {
        "hubspotOAuth2Api": {
          "id": "qubiIFrowxvUdpu6",
          "name": "HubSpot account for node"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "727e52cc-ba62-4f1e-b7b3-c8cd17ef1f42",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        220
      ],
      "parameters": {
        "color": 4,
        "width": 1080,
        "height": 560,
        "content": "## 캘린더 도구\n이 부분은 훌륭한 [Nate Herk](https://www.youtube.com/@nateherk) 유튜브 채널에서 차용되었습니다."
      },
      "typeVersion": 1
    },
    {
      "id": "e605ec3f-ecbe-47c7-a46b-d20ded665c55",
      "name": "Transforms markdown to HTML",
      "type": "n8n-nodes-base.markdown",
      "position": [
        1960,
        -60
      ],
      "parameters": {
        "mode": "markdownToHtml",
        "options": {},
        "markdown": "={{ $json.output.body }}"
      },
      "typeVersion": 1
    },
    {
      "id": "ac43422a-3642-424c-a95a-902652705dbc",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1460,
        -220
      ],
      "parameters": {
        "color": 4,
        "width": 440,
        "height": 540,
        "content": "## 이메일 작성자\n- 이 에이전트는 개인화된 이메일을 작성합니다.\n- 캘린더 에이전트 도구를 사용하여 빈 슬롯에 약속을 만듭니다.\n프롬프트를 자유롭게 개인화하세요."
      },
      "typeVersion": 1
    },
    {
      "id": "c0e5511a-a84f-4603-9c23-3d5266f761c1",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        200,
        620
      ],
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "1IOLtYX7aTspCAN8",
          "name": "OpenAI Pollup"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "c195ad96-7b04-4b01-a3a5-cb0df3c5cb26",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -880,
        260
      ],
      "parameters": {
        "width": 320,
        "height": 260,
        "content": "## 저에게 연락하세요\n\n- 이 워크플로우를 수정해야 할 경우\n- 이 워크플로우에 대해 도움이 필요할 경우\n- 또는 n8n, Make, 또는 Langchain / Langgraph에서 워크플로우가 필요할 경우\n\n저에게 작성하세요: [thomas@pollup.net](mailto:thomas@pollup.net)\n\n**내 다른 워크플로우를 [여기](https://n8n.io/creators/zeerobug/)에서 보세요**"
      },
      "typeVersion": 1
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Enter your company data here",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Events": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Update Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "calendarAgent": {
      "ai_tool": [
        [
          {
            "node": "Write a personalized message",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "main": [
        [
          {
            "node": "Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HubSpot Trigger": {
      "main": [
        [
          {
            "node": "Enter your company data here",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send the message": {
      "main": [
        [
          {
            "node": "Set owner to contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out owners": {
      "main": [
        [
          {
            "node": "Get current owner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get current owner": {
      "main": [
        [
          {
            "node": "If a contact is created",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get list of owners": {
      "main": [
        [
          {
            "node": "Split Out owners",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Write a personalized message",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If a contact is created": {
      "main": [
        [
          {
            "node": "Get all info about the contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Write a personalized message",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create Event with Attendee": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Transforms markdown to HTML": {
      "main": [
        [
          {
            "node": "Send the message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enter your company data here": {
      "main": [
        [
          {
            "node": "Get list of owners",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write a personalized message": {
      "main": [
        [
          {
            "node": "Transforms markdown to HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all info about the contact": {
      "main": [
        [
          {
            "node": "Write a personalized message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Calendar Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}