{
  "meta": {
    "instanceId": "408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9",
    "templateCredsSetupCompleted": true
  },
  "nodes": [
    {
      "id": "b0224d75-763d-4f06-8aa3-3f1b4c5ca96d",
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        800,
        500
      ],
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "operation"
            },
            {
              "name": "repo"
            },
            {
              "name": "issueNumber"
            },
            {
              "name": "text"
            }
          ]
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "dd0e2ff0-af31-4503-a276-65682a3009a8",
      "name": "Operation",
      "type": "n8n-nodes-base.switch",
      "position": [
        980,
        500
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "outputKey": "getLatestIssues",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "81b134bc-d671-4493-b3ad-8df9be3f49a6",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.operation }}",
                    "rightValue": "getLatestIssues"
                  }
                ]
              },
              "renameOutput": true
            },
            {
              "outputKey": "getIssueComments",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "8d57914f-6587-4fb3-88e0-aa1de6ba56c1",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.operation }}",
                    "rightValue": "getIssueComments"
                  }
                ]
              },
              "renameOutput": true
            },
            {
              "outputKey": "addIssueComment",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "7c38f238-213a-46ec-aefe-22e0bcb8dffc",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.operation }}",
                    "rightValue": "addIssueComment"
                  }
                ]
              },
              "renameOutput": true
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2
    },
    {
      "id": "bc35f181-e3a4-4aa4-8132-26cd4a6ced8a",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        120
      ],
      "parameters": {
        "color": 7,
        "width": 680,
        "height": 660,
        "content": "## 1. MCP 서버 트리거 설정\n\n[MCP 서버 트리거에 대해 더 읽기](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger)"
      },
      "typeVersion": 1
    },
    {
      "id": "e4c8d338-08ad-4c47-935b-b5ea53dc59d7",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        700,
        120
      ],
      "parameters": {
        "color": 7,
        "width": 560,
        "height": 300,
        "content": "## 2. Github Node를 사용한 간단한 지원 도구 빌드  \n[Github Node에 대해 더 알아보기](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.github)  \n\n에이전트가 전체 원시 SQL 문을 제공하도록 하는 것이 더 쉽지만,  \n최악의 경우 데이터가 모르게 유출되거나 삭제될 수 있는 실제 보안 위험에 당신이나 당신의 조직을 노출시킬 수 있습니다.  \n\n에이전트가 쿼리의 매개변수만 제공하도록 강제하면 이 위험에 대해 어느 정도 방어할 수 있고,  \nSQL 인젝션 공격에 대한 최선의 관행으로 쿼리 매개변수를 사용할 수 있게 합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "5d6a5f6d-24e8-48ed-8409-8cd24cc2e668",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "parameters": {
        "color": 5,
        "width": 380,
        "height": 100,
        "content": "항상 귀하의 서버를 인증하세요! 프로덕션으로 가기 전에, 귀하의 MCP 서버 트리거에서 인증을 활성화하는 것이 항상 조언됩니다."
      },
      "typeVersion": 1
    },
    {
      "id": "fd11a97d-cd3d-4356-81d3-4266f65ef606",
      "name": "Github MCP Server",
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "position": [
        160,
        300
      ],
      "webhookId": "61848df7-3619-4ccf-831b-d6408e0d6519",
      "parameters": {
        "path": "61848df7-3619-4ccf-831b-d6408e0d6519"
      },
      "typeVersion": 1
    },
    {
      "id": "b8fd8431-71fa-44d1-abdb-b50e6a8a940f",
      "name": "Get Latest Issues",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        160,
        540
      ],
      "parameters": {
        "name": "getLatestIssues",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "description": "Retrieves the latest issues from the github respository.",
        "workflowInputs": {
          "value": {
            "repo": "n8n-io/n8n",
            "text": "null",
            "operation": "getLatestIssues",
            "issueNumber": "null"
          },
          "schema": [
            {
              "id": "operation",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "operation",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "repo",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "repo",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "issueNumber",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "issueNumber",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "text",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "text",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "a11f7b8a-aaa9-41de-a693-6d0463e48d10",
      "name": "Add Issue Comment",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        480,
        540
      ],
      "parameters": {
        "name": "addIssueComment",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "description": "Call this tool to add a comment to the github issue.",
        "workflowInputs": {
          "value": {
            "repo": "n8n-io/n8n",
            "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('text', ``, 'string') }}",
            "operation": "addIssueComment",
            "issueNumber": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('issueNumber', ``, 'string') }}"
          },
          "schema": [
            {
              "id": "operation",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "operation",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "repo",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "repo",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "issueNumber",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "issueNumber",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "text",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "text",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "57e8370b-caf0-4632-98e3-78316b2cb262",
      "name": "Simplify Issues",
      "type": "n8n-nodes-base.set",
      "position": [
        1500,
        320
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "6d5eb037-7e52-4595-a2da-bb183674ea2a",
              "name": "issue_number",
              "type": "number",
              "value": "={{ $json.number }}"
            },
            {
              "id": "3d365039-f012-444c-a383-c6c70fb93e9d",
              "name": "title",
              "type": "string",
              "value": "={{ $json.title }}"
            },
            {
              "id": "20a1b658-c56c-4578-9b1f-350b454da2d2",
              "name": "url",
              "type": "string",
              "value": "={{ $json.url }}"
            },
            {
              "id": "0eb6930d-2ea9-4a83-bab7-5f673e79c1d1",
              "name": "reported_by",
              "type": "string",
              "value": "={{ $json.user.login }}"
            },
            {
              "id": "2d71c6de-ab54-4721-9e1c-5193350a5110",
              "name": "state",
              "type": "string",
              "value": "={{ $json.state }}"
            },
            {
              "id": "474166aa-4bfa-4230-bce4-28df2de47bed",
              "name": "created_at",
              "type": "string",
              "value": "={{ $json.created_at }}"
            },
            {
              "id": "e4784fc1-4438-4d7a-a2f5-86be077ae7ae",
              "name": "updated_at",
              "type": "string",
              "value": "={{ $json.updated_at }}"
            },
            {
              "id": "e0639b60-4a08-406a-be8e-c3565a519f0c",
              "name": "body",
              "type": "string",
              "value": "={{ $json.body }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "632b1286-7e4a-457b-8544-6ca8f2affb9f",
      "name": "Aggregate Results",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        1680,
        320
      ],
      "parameters": {
        "options": {},
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "response"
      },
      "typeVersion": 1
    },
    {
      "id": "447327bc-0b42-47ec-80c0-14d6f521d047",
      "name": "Get Issue Comments",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        320,
        600
      ],
      "parameters": {
        "name": "getIssueComments",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "description": "Retrieves the issue and associated comments and discussion",
        "workflowInputs": {
          "value": {
            "repo": "n8n-io/n8n",
            "text": "null",
            "operation": "getIssueComments",
            "issueNumber": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('issueNumber', ``, 'string') }}"
          },
          "schema": [
            {
              "id": "operation",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "operation",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "repo",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "repo",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "issueNumber",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "issueNumber",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "text",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "text",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "f5c59a05-54e4-4aa5-bef3-192e07adffb0",
      "name": "Get Comments",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1500,
        500
      ],
      "parameters": {
        "url": "={{ $json.comments_url }}",
        "options": {},
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi"
      },
      "credentials": {
        "githubApi": {
          "id": "kA70YRmLeHDqZbXA",
          "name": "GitHub account"
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "3fe80456-9fb5-47bb-80d9-484123571a8f",
      "name": "Simplify Comments",
      "type": "n8n-nodes-base.set",
      "position": [
        1680,
        500
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "6e09ed44-a72c-4915-84f4-0796b45158a7",
              "name": "id",
              "type": "number",
              "value": "={{ $json.id }}"
            },
            {
              "id": "76c34251-7f40-42bc-bb98-17e7fe52d9ed",
              "name": "issue_url",
              "type": "string",
              "value": "={{ $json.issue_url }}"
            },
            {
              "id": "1094dd36-d18d-4ada-ac49-5347f0f245ae",
              "name": "user",
              "type": "string",
              "value": "={{ $json.user.login }}"
            },
            {
              "id": "59b50536-4e0a-46bc-919b-685066253f45",
              "name": "author_association",
              "type": "string",
              "value": "={{ $json.author_association }}"
            },
            {
              "id": "6253bae9-aaff-4a88-9e5a-64126ed80cc4",
              "name": "body",
              "type": "string",
              "value": "={{ $json.body }}"
            },
            {
              "id": "3944598d-8204-45a0-9e0b-448d3cfa5a87",
              "name": "created_at",
              "type": "string",
              "value": "={{ $json.created_at }}"
            },
            {
              "id": "3f395b51-6e57-4d07-9cf9-9a03e7a40c51",
              "name": "updated_at",
              "type": "string",
              "value": "={{ $json.updated_at }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "7926ae2d-5408-4b10-88f3-e6ebfe5f9619",
      "name": "Aggregate Comments",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        1860,
        500
      ],
      "parameters": {
        "options": {},
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "response"
      },
      "typeVersion": 1
    },
    {
      "id": "af2b4c0f-4a83-44a2-bae8-b3c45861d820",
      "name": "Get Many Issues",
      "type": "n8n-nodes-base.github",
      "position": [
        1320,
        320
      ],
      "webhookId": "e08dcf3e-66bb-4ba5-a868-d8c41a98bc95",
      "parameters": {
        "limit": 10,
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.split('/')[0] }}"
        },
        "resource": "repository",
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.split('/')[1] }}"
        },
        "getRepositoryIssuesFilters": {
          "sort": "created"
        }
      },
      "credentials": {
        "githubApi": {
          "id": "kA70YRmLeHDqZbXA",
          "name": "GitHub account"
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "50568171-5f46-4338-a799-a1854ebc425e",
      "name": "Get Single Issue",
      "type": "n8n-nodes-base.github",
      "position": [
        1320,
        500
      ],
      "webhookId": "e08dcf3e-66bb-4ba5-a868-d8c41a98bc95",
      "parameters": {
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.split('/')[0] }}"
        },
        "operation": "get",
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.split('/')[1] }}"
        },
        "issueNumber": "={{ $json.issueNumber }}"
      },
      "credentials": {
        "githubApi": {
          "id": "kA70YRmLeHDqZbXA",
          "name": "GitHub account"
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "1a12fadd-e436-4731-ad66-b9d9cdb9c61c",
      "name": "Create Comment",
      "type": "n8n-nodes-base.github",
      "position": [
        1320,
        680
      ],
      "webhookId": "e08dcf3e-66bb-4ba5-a868-d8c41a98bc95",
      "parameters": {
        "body": "={{ $json.text }}",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.split('/')[0] }}"
        },
        "operation": "createComment",
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.split('/')[1] }}"
        },
        "issueNumber": "={{ $json.issueNumber }}"
      },
      "credentials": {
        "githubApi": {
          "id": "kA70YRmLeHDqZbXA",
          "name": "GitHub account"
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "b90acf56-c871-49de-95d0-1c6ceb1799f7",
      "name": "Get Response",
      "type": "n8n-nodes-base.set",
      "position": [
        1500,
        680
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "65631bfa-7448-4188-8cc1-b812361ae9b1",
              "name": "response",
              "type": "string",
              "value": "ok"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "da360f61-4251-4f0f-8081-3b502e9981c9",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -460,
        -480
      ],
      "parameters": {
        "width": 440,
        "height": 1260,
        "content": "## 직접 해보세요!\n### 이 n8n은 자신의 조직의 저장소, 이슈 및 풀 리퀘스트에 맞게 맞춤화된 Github MCP 서버를 구축하는 방법을 보여줍니다.\n\n이 n8n 구현체는 Github에서 제공하는 공식 MCP 서버만큼 완전한 기능은 아니지만, 사용자에게 부여되는 접근 권한 및/또는 기능을 정확히 제어할 수 있어 MCP 사용을 더 간단하고, 일부 경우에는 더 안전하게 만들 수 있습니다. 이 템플릿의 사용 사례는 특정 저장소 내의 이슈를 조회하고 댓글을 작성하는 것뿐이지만, 팀의 필요에 따라 확장할 수 있습니다.\n\n이 MCP 예시는 공식 MCP 참조 구현체를 기반으로 하며, 여기에서 찾을 수 있습니다: https://github.com/modelcontextprotocol/servers/tree/main/src/github\n\n### 작동 원리\n* MCP 서버 트리거를 사용하고 3개의 커스텀 워크플로우 도구에 연결합니다. 각 작업에 여러 노드가 필요하기 때문에 커스텀 워크플로우 도구를 사용합니다.\n* 이 도구 뒤에는 자격 증명과 대상 저장소로 미리 구성된 일반 Github 노드가 있습니다.\n* \"Get Issue Comments\" 및 \"Create Issue Comment\" 도구는 먼저 이슈 번호를 얻어야 합니다. 에이전트는 이를 위해 \"Get Latest Issues\" 도구를 호출해야 합니다.\n\n### 사용 방법\n* 이 Github MCP 서버는 호환되는 MCP 클라이언트가 Github 이슈를 조회하고 댓글을 작성할 수 있게 합니다. 사용하기 전에 Github 계정과 저장소 접근 권한이 필요합니다.\n* MCP 클라이언트를 연결하려면 n8n 지침을 따르세요: https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop\n* MCP 클라이언트에서 다음 쿼리를 시도해보세요:\n  * \"MCP에 대한 최신 이슈를 가져다줄 수 있나요?\"\n  * \"이슈 12345의 현재 진행 상황은 뭐야?\"\n  * \"이슈 12345에 '최신 버전을 설치해 보고 작동하는지 확인하세요'라는 댓글을 추가해줄 수 있나요?\"\n\n### 요구 사항\n* Github 계정과 저장소 접근 권한. 저장소가 본인의 것이 아니더라도 올바른 권한을 보유해야 합니다.\n* MCP 클라이언트 또는 에이전트(예: Claude Desktop), 여기에서 다운로드 가능: https://claude.ai/download\n\n### 이 워크플로우 맞춤화\n* 이 템플릿을 확장하여 회사의 Github 저장소 내 풀 리퀘스트나 워크플로우와 상호작용하거나, 지표를 가져와 프로그램 관리자를 위한 보고서를 생성하세요.\n* 프로덕션 환경에서 이 MCP 서버를 공유하기 전에 자격 증명을 요구하도록 설정하는 것을 잊지 마세요! \n\n### 출력"
      },
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Operation": {
      "main": [
        [
          {
            "node": "Get Many Issues",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Single Issue",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Comment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Comments": {
      "main": [
        [
          {
            "node": "Simplify Comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Comment": {
      "main": [
        [
          {
            "node": "Get Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Many Issues": {
      "main": [
        [
          {
            "node": "Simplify Issues",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simplify Issues": {
      "main": [
        [
          {
            "node": "Aggregate Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Single Issue": {
      "main": [
        [
          {
            "node": "Get Comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Issue Comment": {
      "ai_tool": [
        [
          {
            "node": "Github MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Latest Issues": {
      "ai_tool": [
        [
          {
            "node": "Github MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simplify Comments": {
      "main": [
        [
          {
            "node": "Aggregate Comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Issue Comments": {
      "ai_tool": [
        [
          {
            "node": "Github MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Operation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}