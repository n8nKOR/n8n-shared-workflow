{
  "id": "cGTxHYV93kS71hLL",
  "meta": {
    "instanceId": "f0243439e79874c29f002782f736673d3388e5328a2ff2db7dd45820643256f5"
  },
  "name": "Send Discord message from Webflow form submission",
  "tags": [
    {
      "id": "7cKuF8oYmXKMRDsD",
      "name": "webflow",
      "createdAt": "2024-01-09T02:22:11.773Z",
      "updatedAt": "2024-01-09T02:22:11.773Z"
    },
    {
      "id": "3Rn4VbTINmdaOxoY",
      "name": "discord",
      "createdAt": "2024-01-16T06:00:48.375Z",
      "updatedAt": "2024-01-16T06:00:48.375Z"
    }
  ],
  "nodes": [
    {
      "id": "5de5b2ea-5257-4782-8f11-ea9c746083eb",
      "name": "Does the channel exist?",
      "type": "n8n-nodes-base.if",
      "position": [
        1420,
        360
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "b8fa7e94-ea10-40f0-ab0c-795620a5ee60",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.channel }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2
    },
    {
      "id": "325ac193-b72f-4753-8d74-4e3d5cd5172c",
      "name": "Transform data to send message",
      "type": "n8n-nodes-base.set",
      "position": [
        1880,
        540
      ],
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "formData",
              "type": "objectValue",
              "objectValue": "={{ $('Filter existing Discord channel').item.json.formData }}"
            },
            {
              "name": "formName",
              "stringValue": "={{ $('Filter existing Discord channel').item.json.formName }}"
            },
            {
              "name": "channel",
              "type": "objectValue",
              "objectValue": "={\"id\":\"{{ $json.id }}\", \"name\": \"{{ $json.name }}\" }"
            }
          ]
        },
        "include": "none",
        "options": {
          "dotNotation": true
        }
      },
      "typeVersion": 3.2
    },
    {
      "id": "1f084545-53a6-4460-81bb-d5109cb06db4",
      "name": "Webflow Form Submission Trigger",
      "type": "n8n-nodes-base.webflowTrigger",
      "position": [
        780,
        360
      ],
      "webhookId": "4f11dae8-d23f-43c7-992b-04460b38f488",
      "parameters": {
        "site": "60e6f0f07c46af62aa2b1c98"
      },
      "credentials": {
        "webflowApi": {
          "id": "Nuq6n7zNYTp6iS2m",
          "name": "Webflow Tutum Access"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "a6076ef4-5b8a-45dc-8f44-02ccf9d2ba34",
      "name": "Compose Slack message",
      "type": "n8n-nodes-base.code",
      "position": [
        2140,
        340
      ],
      "parameters": {
        "jsCode": "const webflowFormData = $input.all()[0].json.formData;\n\nconst objectToMarkdown = (obj) => {\n  return Object.entries(obj)\n    .map(([key, value]) => `**${key}**: ${value}`)\n    .join('\\n');\n}\n\nconst discordChannelMessage = {\n\t\"content\": `New form submission: \\n ${objectToMarkdown(webflowFormData)}`\n\t\n};\nconst data = {...$input.all()[0].json, discordChannelMessage: discordChannelMessage};\nreturn data;\n"
      },
      "typeVersion": 2
    },
    {
      "id": "76dd8d4f-5b65-4171-a921-9d32a8e5c893",
      "name": "List Discord Channels",
      "type": "n8n-nodes-base.discord",
      "position": [
        1000,
        360
      ],
      "parameters": {
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": "987961215550623794",
          "cachedResultUrl": "https://discord.com/channels/987961215550623794",
          "cachedResultName": "kreonovo"
        },
        "options": {},
        "operation": "getAll"
      },
      "credentials": {
        "discordBotApi": {
          "id": "rAP7e9I0RHBsnq7Y",
          "name": "Discord Bot KN"
        }
      },
      "typeVersion": 2
    },
    {
      "id": "7551d395-6364-4d28-b778-c2a16b04db96",
      "name": "Filter existing Discord channel",
      "type": "n8n-nodes-base.code",
      "position": [
        1200,
        360
      ],
      "parameters": {
        "jsCode": "\nconst transformedFormName = (inputString)=> {\n    // Convert to lowercase\n  const lowercaseString = inputString.toLowerCase();\n\n  // Split by space\n  const wordsArray = lowercaseString.split(' ');\n\n  // Join with hyphens\n  const resultString = wordsArray.join('-');\n\n  return resultString;\n}\n\nconst currentForm = transformedFormName($('Webflow Form Submission Trigger').all()[0].json[\"name\"]);\n\nconst doesChannelExist = (channelName)=> {\n  return channelName == currentForm\n}\n\nlet channels = [];\nfor (const item of $input.all()) {\n  let channel = {\n    name: item.json[\"name\"],\n    id: item.json[\"id\"],\n    channelExists: doesChannelExist(item.json[\"name\"]),\n  };\n  channels.push(channel);\n}\n\nlet data = [ { \n  channel: channels.filter((c)=>{return c.channelExists === true})[0],\n  formName: currentForm,\n  formData: $('Webflow Form Submission Trigger').all()[0].json[\"data\"]\n}\n  \n]\n\nreturn data;"
      },
      "typeVersion": 2
    },
    {
      "id": "df38e67b-f76d-4b43-8da4-8e39230a5d0a",
      "name": "Create Discord channel with form name",
      "type": "n8n-nodes-base.discord",
      "position": [
        1640,
        540
      ],
      "parameters": {
        "name": "={{ $json.formName }}",
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": "987961215550623794",
          "cachedResultUrl": "https://discord.com/channels/987961215550623794",
          "cachedResultName": "kreonovo"
        },
        "options": {}
      },
      "credentials": {
        "discordBotApi": {
          "id": "rAP7e9I0RHBsnq7Y",
          "name": "Discord Bot KN"
        }
      },
      "typeVersion": 2
    },
    {
      "id": "8a4fb8af-f156-48cf-b6cd-52235ced1de9",
      "name": "Notify #general channel of newly created channel1",
      "type": "n8n-nodes-base.discord",
      "position": [
        1880,
        780
      ],
      "parameters": {
        "content": "=A new channel was created <#{{ $json['id']  }}>",
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": "987961215550623794",
          "cachedResultUrl": "https://discord.com/channels/987961215550623794",
          "cachedResultName": "kreonovo"
        },
        "options": {},
        "resource": "message",
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "987961215550623797",
          "cachedResultUrl": "https://discord.com/channels/987961215550623794/987961215550623797",
          "cachedResultName": "general"
        }
      },
      "credentials": {
        "discordBotApi": {
          "id": "rAP7e9I0RHBsnq7Y",
          "name": "Discord Bot KN"
        }
      },
      "typeVersion": 2
    },
    {
      "id": "1c1a20ee-303e-4015-9465-9674f17fca46",
      "name": "Send form submission to Discord channel",
      "type": "n8n-nodes-base.discord",
      "position": [
        2360,
        340
      ],
      "parameters": {
        "content": "={{ $json.discordChannelMessage.content }}",
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": "987961215550623794",
          "cachedResultUrl": "https://discord.com/channels/987961215550623794",
          "cachedResultName": "kreonovo"
        },
        "options": {},
        "resource": "message",
        "channelId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.channel.id }}"
        }
      },
      "credentials": {
        "discordBotApi": {
          "id": "rAP7e9I0RHBsnq7Y",
          "name": "Discord Bot KN"
        }
      },
      "typeVersion": 2
    },
    {
      "id": "8e7f2f57-b6eb-4b34-84d4-e61f24e0cdf9",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        200
      ],
      "parameters": {
        "color": 6,
        "width": 624.279069767441,
        "height": 535.976744186046,
        "content": "# Webflow 폼 제출을 Discord에서 관리\n\n## 전체 가이드와 비디오\n\n[전체 가이드와 비디오 여기](https://blog.kreonovo.co.za/send-webflow-form-submissions-to-discord-server/)\n\n이 워크플로는 동적으로 귀하의 Webflow 폼에 대한 Discord 채널을 생성한 다음 해당 채널로 폼 제출을 보냅니다. Webflow 폼 이름이 채널 이름으로 사용됩니다.\n\n## 시작하기\n\n1. API V1 토큰을 사용하여 Webflow 자격 증명 생성\n\n2. 애플리케이션을 만들어 Bot API를 사용하여 Discord 자격 증명 생성 [Discord에서 귀하의 애플리케이션](https://discord.com/developers/applications). 귀하의 애플리케이션에 대한 상세한 스코프 목록은 위의 비디오 가이드를 참조하세요.\n\n3. 캔버스에서 관련 노드에 귀하의 자격 증명을 연결하세요.\n\n4. 워크플로를 활성화하고 Webflow 사이트에서 폼을 제출하세요.\n\n그게 다예요! Webflow 폼이나 사이트에 사용자 정의 코드를 추가할 필요가 없습니다.\n\nWebflow Designer의 폼 설정 섹션에서 귀하의 폼 이름이 Discord 채널을 생성하는 데 사용됩니다. 이 워크플로는 이를 자동으로 처리합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "fc1ce7a7-ae13-447c-9c60-c8b082fb2b70",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2080,
        242.97574123989227
      ],
      "parameters": {
        "width": 224.58139534883728,
        "height": 296.44286341127054,
        "content": "메시지를 형식화하세요. Discord는 Markdown을 허용합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "154a43e0-6967-4307-b9d2-c30be6dae84a",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1320,
        740
      ],
      "parameters": {
        "width": 323.0232558139535,
        "height": 304.69767441860455,
        "content": "거짓 분기  \nWebflow의 폼 이름을 사용하여 새로운 Discord 채널을 생성합니다. 채널 이름은 소문자로 변환하고 단어는 대시로 구분해야 합니다.  \n\n새로운 채널이 생성되면 #general 채널에 새로운 채널로의 직접 링크가 포함된 메시지를 보냅니다.  \n\n마지막으로 Webflow 폼 제출 내용을 새로운 채널에 메시지로 보냅니다."
      },
      "typeVersion": 1
    },
    {
      "id": "f668884a-b6fe-4abd-bf6f-dd45986235bf",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1160,
        160
      ],
      "parameters": {
        "width": 224.58139534883728,
        "height": 393.9954240581709,
        "content": "### 데이터를 결합하여 진행하기\n\n이 코드는 Discord에서 폼 이름이 있는 채널이 존재하는지 확인할 것입니다.\n\n우리는 또한 다음 노드로 전달하기 위해 객체를 생성합니다."
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "677986e6-bdc4-4e4d-92ee-568385174325",
  "connections": {
    "Compose Slack message": {
      "main": [
        [
          {
            "node": "Send form submission to Discord channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Discord Channels": {
      "main": [
        [
          {
            "node": "Filter existing Discord channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Does the channel exist?": {
      "main": [
        [
          {
            "node": "Compose Slack message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Discord channel with form name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform data to send message": {
      "main": [
        [
          {
            "node": "Compose Slack message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter existing Discord channel": {
      "main": [
        [
          {
            "node": "Does the channel exist?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webflow Form Submission Trigger": {
      "main": [
        [
          {
            "node": "List Discord Channels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Discord channel with form name": {
      "main": [
        [
          {
            "node": "Transform data to send message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Notify #general channel of newly created channel1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}