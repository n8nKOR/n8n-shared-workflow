{
  "meta": {
    "instanceId": "03e9d14e9196363fe7191ce21dc0bb17387a6e755dcc9acc4f5904752919dca8"
  },
  "nodes": [
    {
      "id": "93963e3d-bd30-4a0f-ba56-7896cd19d2ae",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -660,
        160
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "c459e403-01b8-43dd-8065-1f8dcb77bcc0",
      "name": "Run Every 5 Minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -660,
        -40
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "7cabd06a-7898-4789-9671-78f0b6fcac2a",
      "name": "Get 5 Minute Ago Timestamp",
      "type": "n8n-nodes-base.dateTime",
      "position": [
        -320,
        40
      ],
      "parameters": {
        "options": {},
        "duration": 5,
        "timeUnit": "minutes",
        "magnitude": "={{ $now.toUTC() }}",
        "operation": "subtractFromDate",
        "outputFieldName": "queryDate"
      },
      "typeVersion": 2
    },
    {
      "id": "5f21f279-3608-41bf-8986-47832aa0f1f2",
      "name": "Get Incidents from ServiceNow",
      "type": "n8n-nodes-base.serviceNow",
      "onError": "continueErrorOutput",
      "position": [
        -100,
        40
      ],
      "parameters": {
        "options": {
          "sysparm_query": "=sys_created_on>={{ $json.queryDate }}",
          "sysparm_display_value": "true"
        },
        "resource": "incident",
        "operation": "getAll",
        "authentication": "basicAuth"
      },
      "credentials": {
        "serviceNowBasicApi": {
          "id": "wjkWiUNQxo5PzTIb",
          "name": "ServiceNow Basic Auth account"
        }
      },
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "id": "19fc7c77-e2b0-495d-bb7b-7bc7a7d87805",
      "name": "Check if New Incidents",
      "type": "n8n-nodes-base.if",
      "position": [
        160,
        -40
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "09750510-4604-4372-9cdc-d8055adae12a",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              },
              "leftValue": "={{ $json.sys_id }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "53e120d8-3022-46c0-8524-2c14f30d2c1a",
      "name": "Post Error Message if Error with ServiceNow",
      "type": "n8n-nodes-base.slack",
      "position": [
        480,
        760
      ],
      "webhookId": "0fba7a73-b273-4d52-863f-9a1b3ff75266",
      "parameters": {
        "text": "🚨 Issue connecting to ServiceNow. Please investigate error in n8n. 🚨",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "C086LRRQZQB",
          "cachedResultName": "incident-notifications"
        },
        "otherOptions": {
          "mrkdwn": true,
          "includeLinkToWorkflow": false
        }
      },
      "credentials": {
        "slackApi": {
          "id": "K04E2FxPZozHux9J",
          "name": "ServiceNow Bot"
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "0784e71c-208d-4442-b355-3f1f076d9846",
      "name": "Sort Incidents in Ascending Order",
      "type": "n8n-nodes-base.sort",
      "position": [
        511,
        -271
      ],
      "parameters": {
        "options": {},
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "number"
            }
          ]
        }
      },
      "typeVersion": 1
    },
    {
      "id": "8435a455-0ea3-4443-8370-ec2e4c392e2f",
      "name": "Post Incident Details to Slack Channel",
      "type": "n8n-nodes-base.slack",
      "position": [
        731,
        -271
      ],
      "webhookId": "245d019e-7762-4e4a-861e-6181f1dcc7f2",
      "parameters": {
        "select": "channel",
        "blocksUi": "={\n\t\"blocks\": [\n\t\t{\n\t\t\t\"type\": \"header\",\n\t\t\t\"text\": {\n\t\t\t\t\"type\": \"plain_text\",\n\t\t\t\t\"text\": \"ServiceNow Incident Notification\",\n\t\t\t\t\"emoji\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"type\": \"section\",\n\t\t\t\"fields\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"mrkdwn\",\n\t\t\t\t\t\"text\": \"*Incident ID:*\\n{{ $('Get Incidents from ServiceNow').item.json.number }}\"\n\t\t\t\t},\n{\n\t\t\t\t\t\"type\": \"mrkdwn\",\n\t\t\t\t\t\"text\": \"*Description:*\\n{{ $('Get Incidents from ServiceNow').item.json.short_description }}\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"mrkdwn\",\n\t\t\t\t\t\"text\": \"*Severity:*\\n{{ $('Get Incidents from ServiceNow').item.json.severity }}\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"mrkdwn\",\n\t\t\t\t\t\"text\": \"*Caller:*\\n{{ $('Get Incidents from ServiceNow').item.json.caller_id.display_value }}\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"mrkdwn\",\n\t\t\t\t\t\"text\": \"*Priority:*\\n{{ $('Get Incidents from ServiceNow').item.json.priority }}\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"mrkdwn\",\n\t\t\t\t\t\"text\": \"*State:*\\n{{ $('Get Incidents from ServiceNow').item.json.incident_state }}\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"mrkdwn\",\n\t\t\t\t\t\"text\": \"*Category:*\\n{{ $('Get Incidents from ServiceNow').item.json.category }}\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"mrkdwn\",\n\t\t\t\t\t\"text\": \"*Date Opened:*\\n{{ $('Get Incidents from ServiceNow').item.json.opened_at }}\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"actions\",\n\t\t\t\"elements\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"button\",\n\t\t\t\t\t\"text\": {\n\t\t\t\t\t\t\"type\": \"plain_text\",\n\t\t\t\t\t\t\"text\": \"View Incident\",\n\t\t\t\t\t\t\"emoji\": true\n\t\t\t\t\t},\n\t\t\t\t\t\"url\": \"https://dev206761.service-now.com/nav_to.do?uri=incident.do?sys_id={{ $('Get Incidents from ServiceNow').item.json.sys_id }}\",\n\t\t\t\t\t\"action_id\": \"view_incident\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "C086LRRQZQB",
          "cachedResultName": "incident-notifications"
        },
        "messageType": "block",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "credentials": {
        "slackApi": {
          "id": "K04E2FxPZozHux9J",
          "name": "ServiceNow Bot"
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "aa526b18-d259-4304-9faa-4375bee83c50",
      "name": "No Incidents, Do Nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        500,
        200
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "2798711d-1788-4126-a576-cdef6c495bd7",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        -720
      ],
      "parameters": {
        "color": 7,
        "width": 543.0448479049971,
        "height": 635.2493225262418,
        "content": "![슬랙](https://uploads.n8n.io/templates/slack.png)  \n## 사고 세부사항 정렬 및 Slack에 게시  \n\n이 섹션은 `Sort Incidents in Ascending Order` 노드로 시작하며, 이 노드는 ServiceNow에서 검색된 사고를 사고 번호 기준으로 오름차순으로 정렬합니다. 이로 인해 사고가 논리적인 순서로 처리되고 표시됩니다. 정렬된 사고는 `Post Incident Details to Slack Channel` 노드로 전달되며, 이 노드는 지정된 Slack 채널에 자세한 메시지를 형식화하여 보냅니다. 메시지에는 사고 ID, 설명, 심각도, 신고자, 우선순위, 상태, 카테고리, 그리고 사고가 열린 날짜와 같은 주요 정보가 포함됩니다. 또한 \"View Incident\" 버튼이 제공되어 ServiceNow 레코드로 직접 링크하여 빠르게 접근할 수 있습니다. 이 섹션은 사고 세부사항을 명확하고 체계적으로 전달하여 팀의 효율적인 협력과 해결을 가능하게 합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "499f5f1e-617b-429d-9760-dc264870e269",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -400,
        -416.5936589599954
      ],
      "parameters": {
        "color": 7,
        "width": 792.7994376824845,
        "height": 651.0105345024904,
        "content": "![ServiceNow](https://uploads.n8n.io/templates/servicenow.png)  \n## 새로운 인시던트 가져오기 및 확인  \n\n이 섹션은 `Get 5 Minute Ago Timestamp` 노드로 시작하며, 이 노드는 현재 시간보다 정확히 5분 전의 타임스탬프를 계산합니다. 이 타임스탬프는 지난 5분 이내에 생성된 인시던트를 조회하기 위한 기준점으로 사용됩니다. `Get Incidents from ServiceNow` 노드는 계산된 타임스탬프 이후에 생성된 모든 인시던트를 ServiceNow 시스템에서 가져오며, 가장 최근의 인시던트만 검색되도록 합니다. 마지막으로, `Check if New Incidents` 노드는 응답에 `sys_id` 필드가 존재하는지 확인하여 인시던트가 반환되었는지 평가합니다. 이 로직은 워크플로의 다음 단계를 결정하는 데 도움이 되며, 새로운 인시던트가 감지될 때만 조치가 취해지도록 합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "c6f1dd80-ed5b-4e29-add1-a38a46338150",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        380
      ],
      "parameters": {
        "color": 7,
        "width": 540.6200460624971,
        "height": 560.0562505318285,
        "content": "![Slack](https://uploads.n8n.io/templates/slack.png)  \n## Slack으로의 오류 알림  \n\n이 섹션은 `Post Error Message if Error with ServiceNow` 노드를 사용하여 오류 보고를 처리합니다. 워크플로우가 ServiceNow에 연결하는 데 문제가 발생하면, 이 노드는 지정된 Slack 채널에 미리 정의된 오류 메시지를 보냅니다. 보통 이는 자격 증명 만료로 인해 발생합니다. 이 메시지는 팀에게 n8n에서 문제를 조사하도록 경고하며, 신속한 주의와 문제 해결을 보장합니다. 연결 오류에 대해 팀에게 사전에 알림으로써, 이 섹션은 워크플로의 신뢰성을 유지하고 사고 모니터링 및 보고의 중단을 최소화합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "1ea0684a-9d7e-4f47-a7b0-9cb22bb6b934",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -800,
        -420
      ],
      "parameters": {
        "color": 7,
        "width": 382.98284329874696,
        "height": 746.70974187249,
        "content": "![n8n](https://uploads.n8n.io/templates/n8n.png)  \n## 매 5분마다 실행  \n\n`Schedule Trigger` 노드는 워크플로를 매 5분마다 자동으로 실행하도록 구성되어 있습니다. 이 설정은 ServiceNow에서 새로운 사고를 일관되게 그리고 적시에 모니터링하도록 하며, 수동 입력 없이 가능합니다. 선택된 간격은 반응성과 자원 효율성 사이에서 균형을 이루며, 실시간 사고 관리 워크플로에 이상적입니다."
      },
      "typeVersion": 1
    },
    {
      "id": "1a3e7b4c-60ce-449c-9f6a-2a1bc42b748d",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        -80
      ],
      "parameters": {
        "color": 7,
        "width": 540.5949630612389,
        "height": 442.9500589573929,
        "content": "![n8n](https://uploads.n8n.io/templates/n8n.png)  \n## 새로운 사건 없음, 아무것도 하지 않음  \n\nServiceNow 시스템 ID가 ServiceNow 노드 출력에서 발견되지 않으면, 이 노드로 라우팅되어 프로세스를 효과적으로 종료합니다."
      },
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Run Every 5 Minutes": {
      "main": [
        [
          {
            "node": "Get 5 Minute Ago Timestamp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if New Incidents": {
      "main": [
        [
          {
            "node": "Sort Incidents in Ascending Order",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Incidents, Do Nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get 5 Minute Ago Timestamp": {
      "main": [
        [
          {
            "node": "Get Incidents from ServiceNow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Incidents from ServiceNow": {
      "main": [
        [
          {
            "node": "Check if New Incidents",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Post Error Message if Error with ServiceNow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort Incidents in Ascending Order": {
      "main": [
        [
          {
            "node": "Post Incident Details to Slack Channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get 5 Minute Ago Timestamp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}