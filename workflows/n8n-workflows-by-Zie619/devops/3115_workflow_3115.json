{
  "meta": {
    "instanceId": "408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9",
    "templateCredsSetupCompleted": true
  },
  "nodes": [
    {
      "id": "c537229c-ffdf-4a4b-8cdd-1d88621e58a0",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -1060,
        2060
      ],
      "webhookId": "1b9f2217-7c53-4440-b62b-aafcf1e1d45d",
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "credentials": {
        "telegramApi": {
          "id": "wJqs1eMdbjilZH1W",
          "name": "jimleuk_ai_survey_demo_bot"
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "90426896-35d8-4449-8607-70e8485441ed",
      "name": "Send Next Question",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2560,
        1900
      ],
      "webhookId": "4306c719-0b05-4986-8ea8-8bcda06e0ad1",
      "parameters": {
        "text": "={{ $('Get Survey State1').first().json.next_question_idx }}. {{ Object.values($('Get Columns1').first().json)[$('Get Survey State1').first().json.next_question_idx+1] }}",
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "wJqs1eMdbjilZH1W",
          "name": "jimleuk_ai_survey_demo_bot"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "614b6d06-7bca-4710-aebf-3a2a685ace09",
      "name": "Send Response",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1540,
        2540
      ],
      "webhookId": "dd1c616f-891c-48d4-8828-e612b13bca63",
      "parameters": {
        "text": "={{ $('Interview Agent1').first().json.output }}",
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "wJqs1eMdbjilZH1W",
          "name": "jimleuk_ai_survey_demo_bot"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "c7f7acc4-c3f7-4fae-98dd-25dca9caae8b",
      "name": "Has No Record?",
      "type": "n8n-nodes-base.if",
      "position": [
        60,
        2260
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "a9f08592-d870-44a4-a7f9-d70193cf721b",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "207a2647-56eb-419a-8269-9a32edabe43a",
      "name": "Is Survey Continue?",
      "type": "n8n-nodes-base.if",
      "position": [
        1980,
        2060
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "5685829b-a2b2-42c8-b6bc-22eaa03db1d2",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              },
              "leftValue": "={{ $('Increment Index1').item.json.is_survey_complete }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "a8e98579-6afa-4d7d-859d-9e635a0a1b0c",
      "name": "Get State2",
      "type": "n8n-nodes-base.redis",
      "position": [
        -520,
        2060
      ],
      "parameters": {
        "key": "={{ $json.cacheKey }}",
        "options": {},
        "operation": "get",
        "propertyName": "data"
      },
      "credentials": {
        "redis": {
          "id": "zU4DA70qSDrZM1El",
          "name": "Redis account (localhost)"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "8074143c-eab7-4146-937c-16c44ef40333",
      "name": "Get Columns1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1440,
        2060
      ],
      "parameters": {
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "firstDataRow": 1,
              "rangeDefinition": "specifyRange"
            }
          }
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KMNqWWO36osZx7jF-i1UL53z2GZnCn9fiBjtlGpvWB4/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Set Variables1').first().json.gsheetId }}"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "XHvC7jIRR8A2TlUl",
          "name": "Google Sheets account"
        }
      },
      "typeVersion": 4.5
    },
    {
      "id": "1f75f3fc-7893-444d-8a1e-59ec3d42ea1d",
      "name": "Set Variables1",
      "type": "n8n-nodes-base.set",
      "position": [
        -880,
        2060
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "2140b769-2e90-4828-8022-1b0a9baf6e44",
              "name": "title",
              "type": "string",
              "value": "Product Satisfaction Survey: DJI Mini 2"
            },
            {
              "id": "fb7110cb-82d3-4c95-81ba-ac97a26fe05e",
              "name": "gsheetId",
              "type": "string",
              "value": "1KMNqWWO36osZx7jF-i1UL53z2GZnCn9fiBjtlGpvWB4"
            },
            {
              "id": "6d9c4b02-8326-49f4-ac22-24bdec7fdd67",
              "name": "cacheKey",
              "type": "string",
              "value": "=survey_user_{{ $json.sessionId }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "a0c06eb9-46d6-4888-85b0-e9a31a31337b",
      "name": "Message Type1",
      "type": "n8n-nodes-base.switch",
      "position": [
        -320,
        2060
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "outputKey": "is_bot_command",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "f5fa8b7c-fdda-4c6d-b610-e243d6299598",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "leftValue": "={{ ['/start','/next', '/reset'].includes($('Telegram Trigger').first().json.message.text) }}",
                    "rightValue": "="
                  }
                ]
              },
              "renameOutput": true
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "is_normal_message"
        }
      },
      "typeVersion": 3.2
    },
    {
      "id": "315585fe-d2e4-4cb1-9d0e-a3e8bc053da3",
      "name": "Get Command1",
      "type": "n8n-nodes-base.set",
      "position": [
        -120,
        1760
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "73335bd3-ce50-46c5-8bcf-f7b8cd992208",
              "name": "command",
              "type": "string",
              "value": "={{ $('Telegram Trigger').first().json.message.text.slice($('Telegram Trigger').first().json.message.entities[0].offset, $('Telegram Trigger').first().json.message.entities[0].length ) }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "7036d250-0271-4c93-9f60-01b9ccaf8be3",
      "name": "Bot Actions1",
      "type": "n8n-nodes-base.switch",
      "position": [
        60,
        1760
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "outputKey": "new_session",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "6f427c86-090d-429a-bc99-d2dd7753c153",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "leftValue": "={{ $('Get Command1').first().json.command === '/start' }}",
                    "rightValue": "/start"
                  }
                ]
              },
              "renameOutput": true
            },
            {
              "outputKey": "next_question",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "bca60df4-278d-4598-afc9-6e8ee61b7ac5",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "leftValue": "={{ $('Get Command1').first().json.command === '/next' }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "typeVersion": 3.2
    },
    {
      "id": "fa755815-29c2-419e-8e36-51102ee88681",
      "name": "Memory3",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "position": [
        2220,
        2060
      ],
      "parameters": {
        "sessionKey": "={{ $('Set Variables1').first().json.cacheKey }}_history",
        "sessionIdType": "customKey",
        "contextWindowLength": 10
      },
      "credentials": {
        "redis": {
          "id": "zU4DA70qSDrZM1El",
          "name": "Redis account (localhost)"
        }
      },
      "typeVersion": 1.4
    },
    {
      "id": "a231e026-e5bf-4864-a57b-29d01e32e1a8",
      "name": "Get Survey State1",
      "type": "n8n-nodes-base.set",
      "position": [
        1620,
        2060
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "6836a5aa-2b51-48cc-8d8f-d64a85d8a52f",
              "name": "title",
              "type": "string",
              "value": "={{ Object.values($json)[1] }}"
            },
            {
              "id": "7b2fdf1b-4f55-4b55-be54-a7b97dd094cb",
              "name": "num_questions",
              "type": "number",
              "value": "={{ Object.keys($json).length - 2 }}"
            },
            {
              "id": "dc6d5c41-0f35-49c9-b9c9-b6b4f2ceb66c",
              "name": "next_question_idx",
              "type": "number",
              "value": "={{ (Number($('Get State3').first().json.data?.current_question_idx) || 0) + 1 }}"
            },
            {
              "id": "8b17703f-fbff-40d2-a7bb-d450f2edfea3",
              "name": "is_survey_complete",
              "type": "boolean",
              "value": "={{ ((Number($('Get State3').first().json.data?.current_question_idx) || 0) + 1) >= (Object.keys($json).length - 1) }}"
            }
          ]
        }
      },
      "executeOnce": true,
      "typeVersion": 3.4
    },
    {
      "id": "a3bb744d-c59f-45a9-8b9d-3c291fa8d860",
      "name": "Reset Agent Memory1",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "position": [
        2240,
        1900
      ],
      "parameters": {
        "mode": "insert",
        "messages": {
          "messageValues": [
            {
              "message": "=You are a curious and inquisitive researcher conducting a survey with a user.\n* In this conversation, you are only interested in one of the questions from the survey which you will ask.\n* When asking an open-ended question, converse with the user to dig deeper into their answer and reveal insights into the user's experience. Do not ask other questions which do not try to expand the user's answer to the initial question.\n* If this is closed-ended question, it is okay to receive a static response and move on to the next question.\n* Only the initial question is numbered, following questions or messages should not be numbered or bulletpointed.\n* If the user goes off-topic, doesn't want to answer the question or wants to do something else which is not related to the survey, then ignore what they say/ask and politely repeat the question."
            },
            {
              "type": "ai",
              "message": "={{ $('Get Survey State1').first().json.next_question_idx }}. {{ Object.values($('Get Columns1').first().json)[$('Get Survey State1').first().json.next_question_idx+1] }}"
            }
          ]
        },
        "insertMode": "override"
      },
      "typeVersion": 1.1
    },
    {
      "id": "b9d693b7-c139-45d8-b0d8-fd8134c7ba84",
      "name": "Memory4",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "position": [
        1120,
        2700
      ],
      "parameters": {
        "sessionKey": "={{ $('Set Variables1').first().json.cacheKey }}_history",
        "sessionIdType": "customKey",
        "contextWindowLength": 100
      },
      "credentials": {
        "redis": {
          "id": "zU4DA70qSDrZM1El",
          "name": "Redis account (localhost)"
        }
      },
      "typeVersion": 1.4
    },
    {
      "id": "c8fd56f5-c4c0-40cb-b727-07a94b633657",
      "name": "Start Session1",
      "type": "n8n-nodes-base.redis",
      "position": [
        440,
        1620
      ],
      "parameters": {
        "key": "={{ $('Set Variables1').first().json.cacheKey }}",
        "value": "={{\n{\n  \"has_session\": true,\n  \"session_createdAt\": $now,\n  \"current_question_idx\": 0\n}\n}}",
        "keyType": "hash",
        "operation": "set"
      },
      "credentials": {
        "redis": {
          "id": "zU4DA70qSDrZM1El",
          "name": "Redis account (localhost)"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "02eaa2cf-512c-4526-948e-b68989b3a8f4",
      "name": "Get State3",
      "type": "n8n-nodes-base.redis",
      "position": [
        1260,
        2060
      ],
      "parameters": {
        "key": "={{ $('Set Variables1').first().json.cacheKey }}",
        "options": {},
        "operation": "get",
        "propertyName": "data"
      },
      "credentials": {
        "redis": {
          "id": "zU4DA70qSDrZM1El",
          "name": "Redis account (localhost)"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "85631c2a-9317-4b14-92d1-895ac022eb70",
      "name": "Increment Index1",
      "type": "n8n-nodes-base.redis",
      "position": [
        1800,
        2060
      ],
      "parameters": {
        "key": "={{ $('Set Variables1').first().json.cacheKey }}",
        "value": "={{\n{\n  \"current_question_idx\": $json.next_question_idx < $json.num_questions\n    ? $json.next_question_idx\n    : $json.num_questions,\n  \"session_updated\": $now,\n}\n}}",
        "keyType": "hash",
        "operation": "set"
      },
      "credentials": {
        "redis": {
          "id": "zU4DA70qSDrZM1El",
          "name": "Redis account (localhost)"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "4464f6fe-d579-4e03-a8ca-918515d38b30",
      "name": "Interview Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1040,
        2540
      ],
      "parameters": {
        "text": "={{ $('Telegram Trigger').first().json.message.text }}",
        "options": {},
        "promptType": "define"
      },
      "typeVersion": 1.7
    },
    {
      "id": "11ec3d5a-5f89-4a84-96ef-291526ae7365",
      "name": "Get Record1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -120,
        2260
      ],
      "parameters": {
        "options": {
          "returnFirstMatch": true
        },
        "filtersUI": {
          "values": [
            {
              "lookupValue": "={{ $('Telegram Trigger').first().json.message.from.id }}",
              "lookupColumn": "ID"
            }
          ]
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KMNqWWO36osZx7jF-i1UL53z2GZnCn9fiBjtlGpvWB4/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Set Variables1').first().json.gsheetId }}"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "XHvC7jIRR8A2TlUl",
          "name": "Google Sheets account"
        }
      },
      "typeVersion": 4.5,
      "alwaysOutputData": true
    },
    {
      "id": "665d58f8-ba2f-4d87-ae56-260333c5ecdf",
      "name": "Append Responses1",
      "type": "n8n-nodes-base.set",
      "position": [
        440,
        2440
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "8069d106-0918-4bc3-9f49-789322129136",
              "name": "payload",
              "type": "string",
              "value": "={{\n[\n  Object.values($('Get Record1').first().json)[Number($('Get State2').first().json.data.current_question_idx || 0) + 1],\n  'User: ' + $('Telegram Trigger').first().json.message.text,\n].join('\\n\\n').trim()\n}}"
            },
            {
              "id": "d25c278c-d3a9-4a5a-9f49-01ee3ca8285a",
              "name": "cell",
              "type": "string",
              "value": "={{\n'abcdefghijklmnopqrstuvxyz'.toUpperCase().split('')[$('Message Type1').first().json.data.current_question_idx]\n}}{{ $('Get Record1').first().json.row_number }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "4771e9e4-8b79-4530-8c4a-6e7ab0623d98",
      "name": "Update Answer2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1360,
        2540
      ],
      "parameters": {
        "url": "=https://sheets.googleapis.com/v4/spreadsheets/{{ $('Set Variables1').first().json.gsheetId }}/values/Sheet1!{{ $('Append Responses1').first().json.cell }}",
        "method": "PUT",
        "options": {},
        "jsonBody": "={{\n{\n  \"range\": `Sheet1!${$('Append Responses1').first().json.cell}`,\n  \"majorDimension\": \"ROWS\",\n  \"values\": [[\n    $('Append Responses1').first().json.payload + '\\n\\nAgent: ' + $('Interview Agent1').first().json.output]]\n}\n}}",
        "sendBody": true,
        "sendQuery": true,
        "specifyBody": "json",
        "authentication": "predefinedCredentialType",
        "queryParameters": {
          "parameters": [
            {
              "name": "valueInputOption",
              "value": "RAW"
            }
          ]
        },
        "nodeCredentialType": "googleSheetsOAuth2Api"
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "XHvC7jIRR8A2TlUl",
          "name": "Google Sheets account"
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "b7094d87-97ce-4f1a-8d30-4d6d57d24477",
      "name": "Get Last Bot Message1",
      "type": "n8n-nodes-base.redis",
      "position": [
        260,
        2440
      ],
      "parameters": {
        "key": "={{ $('Set Variables1').item.json.cacheKey }}_history",
        "options": {},
        "operation": "get",
        "propertyName": "data"
      },
      "credentials": {
        "redis": {
          "id": "zU4DA70qSDrZM1El",
          "name": "Redis account (localhost)"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "6dc77f41-6c3b-4358-82bc-2ea299ef69b2",
      "name": "Update Answer3",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1020,
        2180
      ],
      "parameters": {
        "url": "=https://sheets.googleapis.com/v4/spreadsheets/{{ $('Set Variables1').first().json.gsheetId }}/values/Sheet1!{{ $('Append Responses1').first().json.cell }}",
        "method": "PUT",
        "options": {},
        "jsonBody": "={{\n{\n  \"range\": `Sheet1!${$('Append Responses1').first().json.cell}`,\n  \"majorDimension\": \"ROWS\",\n  \"values\": [[$('Append Responses1').first().json.payload]]\n}\n}}",
        "sendBody": true,
        "sendQuery": true,
        "specifyBody": "json",
        "authentication": "predefinedCredentialType",
        "queryParameters": {
          "parameters": [
            {
              "name": "valueInputOption",
              "value": "RAW"
            }
          ]
        },
        "nodeCredentialType": "googleSheetsOAuth2Api"
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "XHvC7jIRR8A2TlUl",
          "name": "Google Sheets account"
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "dd67ca61-b36c-4f9f-84fe-0b25d411e459",
      "name": "Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1000,
        2700
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "8gccIjcuf3gvaoEr",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "57698127-eea0-434e-af3a-4d49db4a7f15",
      "name": "Model3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        600,
        2600
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "8gccIjcuf3gvaoEr",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "bad16467-bb3c-4d50-9dd8-014bac25fd61",
      "name": "Should Follow Up?1",
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "position": [
        620,
        2440
      ],
      "parameters": {
        "options": {},
        "inputText": "=AI: {{ $('Get Last Bot Message1').item.json.data?.first().parseJson().data.content ?? ''}}\nUSER: {{ $('Telegram Trigger').first().json.message.text }}",
        "categories": {
          "categories": [
            {
              "category": "should_not_ask_followup_questions",
              "description": "=Either\n* The user was asked a close-ended question and gave an adequate static response\n* There are no further insights to be learned from the user's answer"
            },
            {
              "category": "should_ask_followup_questions",
              "description": "=Either one of\n* There are possibly more insights to be learned from the user's answer if we enquire. hint: did the user explaied or justified their answer?\n* The user didn't answer the question"
            }
          ]
        }
      },
      "typeVersion": 1
    },
    {
      "id": "86545380-9ff1-4815-bfaf-c4137fa00fda",
      "name": "Execution Data2",
      "type": "n8n-nodes-base.executionData",
      "position": [
        -700,
        2060
      ],
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "jobType",
              "value": "=state_message"
            },
            {
              "key": "gsheetId",
              "value": "={{ $json.gsheetId }}"
            },
            {
              "key": "title",
              "value": "={{ $json.title }}"
            },
            {
              "key": "fromId",
              "value": "={{ $('Telegram Trigger').item.json.message.from.id }}"
            }
          ]
        }
      },
      "typeVersion": 1
    },
    {
      "id": "ed16f03b-621e-4766-b8fd-f1f662b2dd0b",
      "name": "Create Record2",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        260,
        2060
      ],
      "parameters": {
        "columns": {
          "value": {
            "ID": "={{ $('Telegram Trigger').first().json.message.from.id }}"
          },
          "schema": [
            {
              "id": "ID",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "ID",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "What's your name?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "What's your name?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "What were the main factors that influenced your decision to purchase the DJI Mini 2?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "What were the main factors that influenced your decision to purchase the DJI Mini 2?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Did you compare the DJI Mini 2 with other drone models before purchasing? If yes, which other drone models were you considering? ",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Did you compare the DJI Mini 2 with other drone models before purchasing? If yes, which other drone models were you considering? ",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "What ultimately convinced you to choose the DJI Mini 2 over other options?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "What ultimately convinced you to choose the DJI Mini 2 over other options?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "How satisfied are you with the DJI Mini 2?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "How satisfied are you with the DJI Mini 2?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "What features do you like most about the DJI Mini 2?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "What features do you like most about the DJI Mini 2?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Are there any features you feel are missing or could be improved?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Are there any features you feel are missing or could be improved?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Have you experienced any technical issues with the DJI Mini 2?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Have you experienced any technical issues with the DJI Mini 2?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "How likely are you to recommend the DJI Mini 2 to others?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "How likely are you to recommend the DJI Mini 2 to others?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Where did you purchase your DJI Mini 2?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Where did you purchase your DJI Mini 2?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "How was your overall purchase experience?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "How was your overall purchase experience?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Did you find all the information you needed before purchasing?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Did you find all the information you needed before purchasing?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "If you interacted with DJI customer support, how would you rate the experience?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "If you interacted with DJI customer support, how would you rate the experience?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "How can DJI improve the Mini 2 or future drone models?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "How can DJI improve the Mini 2 or future drone models?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "How can DJI improve the overall shopping and customer service experience?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "How can DJI improve the overall shopping and customer service experience?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Any additional comments or feedback?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Any additional comments or feedback?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "ID"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "appendOrUpdate",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KMNqWWO36osZx7jF-i1UL53z2GZnCn9fiBjtlGpvWB4/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Set Variables1').first().json.gsheetId }}"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "XHvC7jIRR8A2TlUl",
          "name": "Google Sheets account"
        }
      },
      "typeVersion": 4.5,
      "alwaysOutputData": true
    },
    {
      "id": "f2119ef5-aef3-4b0f-80f5-1715a4afe3e0",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        1820
      ],
      "parameters": {
        "color": 7,
        "width": 760,
        "height": 500,
        "content": "## 1. 사용자를 초대하여 설문 조사 시작\n[채팅 트리거에 대해 자세히 알아보기](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.chattrigger/)\n\n사용자에게 설문 조사를 제시하기 위해, n8n의 내장 호스팅 채팅을 사용할 것입니다. 설문 질문은 미리 정의되어 있으며 Google Sheet에서 가져옵니다. 마지막으로, 우리가 어떤 질문을 하고 있는지 추적하는 것과 같은 상태 및 세션 관리에 대해, Redis를 사용할 것입니다. 왜냐하면 그것은 우리의 채팅에 적합한 빠른 쓰기 및 준비된 데이터베이스이기 때문입니다."
      },
      "typeVersion": 1
    },
    {
      "id": "9e7ca15c-0e31-4d78-b8af-31fd6260cd61",
      "name": "Send Start",
      "type": "n8n-nodes-base.telegram",
      "position": [
        600,
        1620
      ],
      "webhookId": "c5d13268-df58-450b-84c4-a61cd2e027ed",
      "parameters": {
        "text": "={{ $('Set Variables1').first().json.title }}.\nWelcome! Thank you for taking the time to participate in our survey.\n\nYou'll be asked a couple of pre-defined questions. For each question, we may ask follow-up questions to better understand your situation. If you want to skip to the next question at any time, simply reply with the \"/next\". Your responses will be recorded.\n\nTo start the survey, simply reply with \"/next\".",
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "wJqs1eMdbjilZH1W",
          "name": "jimleuk_ai_survey_demo_bot"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "e8be2d00-39c8-4dd1-a597-813fc4bffe10",
      "name": "Send Start1",
      "type": "n8n-nodes-base.telegram",
      "position": [
        260,
        1900
      ],
      "webhookId": "c5d13268-df58-450b-84c4-a61cd2e027ed",
      "parameters": {
        "text": "=Sorry, that command is unrecognised. The available options are /start or /next.",
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "wJqs1eMdbjilZH1W",
          "name": "jimleuk_ai_survey_demo_bot"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "153bbe8b-52bc-403c-ae5f-346060a5aac3",
      "name": "Completed Survey",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2220,
        2280
      ],
      "webhookId": "409dbc48-4916-415b-8c1b-caf3b359e1e4",
      "parameters": {
        "text": "=Done! Thank you for completing our survey.\nTo start the survey again, use \"/start\".",
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "wJqs1eMdbjilZH1W",
          "name": "jimleuk_ai_survey_demo_bot"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "c2e39206-f586-4c90-aeb0-d6a141e81d1d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -180,
        1540
      ],
      "parameters": {
        "color": 7,
        "width": 420,
        "height": 380,
        "content": "## 2. 봇 명령 처리\n\n[스위치 노드에 대해 더 알아보기](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/)\n\n우리 채트봇은 전통적인 채팅 메커니즘과 AI 에이전트의 혼합일 수 있습니다. 봇 명령을 사용하면, 사용자가 대화의 흐름에 대해 일부 제어를 가질 수 있습니다. 예를 들어, 다음 질문을 건너뛰거나 설문조사를 다시 시작하는 등."
      },
      "typeVersion": 1
    },
    {
      "id": "6b6241ae-17b7-4f0f-9c00-f5de4d62f692",
      "name": "Create Record1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        280,
        1620
      ],
      "parameters": {
        "columns": {
          "value": {
            "ID": "={{ $('Telegram Trigger').first().json.message.from.id }}"
          },
          "schema": [
            {
              "id": "ID",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "ID",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "What's your name?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "What's your name?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "What were the main factors that influenced your decision to purchase the DJI Mini 2?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "What were the main factors that influenced your decision to purchase the DJI Mini 2?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Did you compare the DJI Mini 2 with other drone models before purchasing? If yes, which other drone models were you considering? ",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Did you compare the DJI Mini 2 with other drone models before purchasing? If yes, which other drone models were you considering? ",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "What ultimately convinced you to choose the DJI Mini 2 over other options?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "What ultimately convinced you to choose the DJI Mini 2 over other options?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "How satisfied are you with the DJI Mini 2?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "How satisfied are you with the DJI Mini 2?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "What features do you like most about the DJI Mini 2?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "What features do you like most about the DJI Mini 2?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Are there any features you feel are missing or could be improved?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Are there any features you feel are missing or could be improved?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Have you experienced any technical issues with the DJI Mini 2?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Have you experienced any technical issues with the DJI Mini 2?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "How likely are you to recommend the DJI Mini 2 to others?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "How likely are you to recommend the DJI Mini 2 to others?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Where did you purchase your DJI Mini 2?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Where did you purchase your DJI Mini 2?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "How was your overall purchase experience?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "How was your overall purchase experience?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Did you find all the information you needed before purchasing?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Did you find all the information you needed before purchasing?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "If you interacted with DJI customer support, how would you rate the experience?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "If you interacted with DJI customer support, how would you rate the experience?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "How can DJI improve the Mini 2 or future drone models?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "How can DJI improve the Mini 2 or future drone models?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "How can DJI improve the overall shopping and customer service experience?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "How can DJI improve the overall shopping and customer service experience?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Any additional comments or feedback?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Any additional comments or feedback?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "ID"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "appendOrUpdate",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KMNqWWO36osZx7jF-i1UL53z2GZnCn9fiBjtlGpvWB4/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Set Variables1').first().json.gsheetId }}"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "XHvC7jIRR8A2TlUl",
          "name": "Google Sheets account"
        }
      },
      "typeVersion": 4.5,
      "alwaysOutputData": true
    },
    {
      "id": "f8f6b582-75d7-40a1-95a5-c1b80fa41c64",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        520,
        2180
      ],
      "parameters": {
        "color": 7,
        "width": 440,
        "height": 420,
        "content": "## 3. 후속 질문 지원\n\n[텍스트 분류기 노드에 대해 자세히 알아보기](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.text-classifier/)\n\n현재 질문이 개방형인지 폐쇄형인지에 따라, 에이전트가 답변에 너무 많은 시간을 들이지 않을 수 있습니다. 여기서 우리는 텍스트 분류기 노드를 사용하여 그 판단을 내립니다 - 폐쇄형일 때는 다음 질문으로 넘어가고, 개방형일 때는 답변을 더 깊이 파고들 수 있습니다."
      },
      "typeVersion": 1
    },
    {
      "id": "5aa8956b-787d-4b4a-b4dc-a2415434a331",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        980,
        2340
      ],
      "parameters": {
        "color": 7,
        "width": 700,
        "height": 500,
        "content": "## 4. 대화형 AI 에이전트로 더 깊은 통찰\n[AI 에이전트에 대해 더 알아보기](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/)\n\n이 워크플로우에서 AI를 활용하는 방법은 에이전트가 설문의 주어진 질문에 대해 사용자와 앞뒤로 대화를 나누도록 하는 것입니다. 이는 답변이 단 한 문장 이상이 될 수 있고, 약 1분 정도의 대화로 확장될 수 있음을 의미하며, 설문에 대해 훨씬 더 깊은 통찰을 제공합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "aa304745-6d30-4fdb-8279-eb505ee06a61",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1200,
        1820
      ],
      "parameters": {
        "color": 7,
        "width": 740,
        "height": 380,
        "content": "## 5. 대화 흐름을 외부 상태로 관리  \n[Redis 노드에 대해 더 알아보기](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.redis/)  \n\n우리는 Redis를 사용자가 설문조사를 진행할 때 질문 인덱스(또는 \"상태\")를 저장하고 추적하는 빠르고 쉬운 방법으로 사용합니다. 다음 질문이 무엇인지 또는 설문조사가 완료되었는지 계산하기 위해, 우리는 사용자의 세션에 대한 스프레드시트 행을 조회하고 거기에서 다음 상태를 계산합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "4ce7ce73-d771-4794-b1fb-87c15ccdbdaf",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2160,
        1680
      ],
      "parameters": {
        "color": 7,
        "width": 620,
        "height": 520,
        "content": "## 6. 매 질문마다 채팅 메모리 초기화\n\n[Chat Memory Manager에 대해 자세히 알아보기](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memorymanager/)\n\n사용자와 상호작용할 때 에이전트가 특정 질문에 집중하도록 하기 위해, 이전 메시지 컨텍스트를 모두 지워야 한다는 것을 발견했습니다. 이는 과거 참조를 사용하지 않게 하기 위함입니다. 이것은 에이전트 행동을 제어하는 매우 비전통적인 접근법이지만, 제 관찰에 따르면 대화 중 환각을 크게 줄여줍니다."
      },
      "typeVersion": 1
    },
    {
      "id": "2b26317c-6ba6-4ff0-92a6-525cce9e725d",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1740,
        1300
      ],
      "parameters": {
        "width": 580,
        "height": 1020,
        "content": "## 시도해 보세요\n### 이 n8n 템플릿은 AI를 활용하여 비즈니스에 구조화된 채팅 여정을 구축하는 방법을 보여줍니다.\n\n이 시나리오에서 채팅봇은 미리 정의된 질문 세트를 사용하여 사용자와 제품 만족도 설문조사를 진행합니다. 각 질문에 대해 에이전트는 후속 질문을 통해 사용자의 답변을 더 깊이 탐구할 수 있습니다.\n\n이 채팅봇 템플릿은 완전히 \"에이전틱\"하지 않기 때문에 다소 복잡하고 스크립트화되어 있지만, 더 예측 가능한 사용자 여정을 보장합니다. 이는 경험에 더 많은 가이드라인을 필요로 할 때 적합합니다.\n\n예시 설문조사 보기: https://docs.google.com/spreadsheets/d/e/2PACX-1vQWcREg75CzbZd8loVI12s-DzSTj3NE_02cOCpAh7umj0urazzYCfzPpYvvh7jqICWZteDTALzBO46i/pubhtml?gid=0&single=true\n\n### 작동 원리\n* 사용자가 봇 명령어 \"/next\"를 입력하여 채팅 세션을 시작합니다.\n* 시작되면, 템플릿은 Google 시트에서 질문을 가져와 사용자에게 순서대로 묻습니다. 질문은 왼쪽에서 오른쪽으로 진행됩니다.\n* 사용자가 질문에 답하면, 텕스트 분류기 노드가 후속 질문을 할 수 있는지 결정합니다.\n* 후속 질문이 필요하지 않으면 설문조사가 다음 질문으로 진행됩니다. 그렇지 않으면, AI 에이전트가 사용자의 응답에 따라 후속 질문을 생성합니다.\n* 모든 답변과 AI 대화는 Google 시트에 기록됩니다.\n* 모든 질문에 답하면, 템플릿은 설문조사를 종료하고 사용자가 다시 시작할 수 있는 기회를 제공합니다.\n\n### 사용 방법\n* Telegram 봇을 설정해야 합니다([문서 보기](https://docs.n8n.io/integrations/builtin/credentials/telegram/)).\n* ID 열이 있는 Google 시트를 생성합니다. 나머지 열에는 설문조사 질문을 채우세요([샘플 보기](https://docs.google.com/spreadsheets/d/e/2PACX-1vQWcREg75CzbZd8loVI12s-DzSTj3NE_02cOCpAh7umj0urazzYCfzPpYvvh7jqICWZteDTALzBO46i/pubhtml?gid=0&single=true)).\n* 상태를 캡처하기 위해 Redis 인스턴스를 설정하세요. 자체 호스팅하거나 [Upstash](https://upstash.com?ref=jimleuk)에서 무료 계정을 신청하세요.\n* \"Set Variable\" 노드를 업데이트하여 Google 시트 ID와 설문조사 제목을 입력하세요.\n* 봇을 사용자와 공유하여 다른 사람들이 설문조사에 참여할 수 있도록 하세요.\n\n### WhatsApp에서 사용할 수 있나요?\n네, 가능합니다! 모든 Telegram 노드를 WhatsApp 노드로 교체하면 동일한 결과를 얻을 수 있습니다.\n\n### 도움이 필요하세요?\n[Discord](https://discord.com/invite/XPKeKXeB7d) 또는 [Forum](https://community.n8n.io/)에 참여하세요!"
      },
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Interview Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Should Follow Up?1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Memory3": {
      "ai_memory": [
        [
          {
            "node": "Reset Agent Memory1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Memory4": {
      "ai_memory": [
        [
          {
            "node": "Interview Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get State2": {
      "main": [
        [
          {
            "node": "Message Type1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get State3": {
      "main": [
        [
          {
            "node": "Get Columns1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Start": {
      "main": [
        []
      ]
    },
    "Get Record1": {
      "main": [
        [
          {
            "node": "Has No Record?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Start1": {
      "main": [
        []
      ]
    },
    "Bot Actions1": {
      "main": [
        [
          {
            "node": "Create Record1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get State3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Start1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Columns1": {
      "main": [
        [
          {
            "node": "Get Survey State1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Command1": {
      "main": [
        [
          {
            "node": "Bot Actions1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Type1": {
      "main": [
        [
          {
            "node": "Get Command1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Record1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Response": {
      "main": [
        []
      ]
    },
    "Create Record1": {
      "main": [
        [
          {
            "node": "Start Session1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Record2": {
      "main": [
        [
          {
            "node": "Get State3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has No Record?": {
      "main": [
        [
          {
            "node": "Create Record2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Last Bot Message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Variables1": {
      "main": [
        [
          {
            "node": "Execution Data2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Session1": {
      "main": [
        [
          {
            "node": "Send Start",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Answer2": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Answer3": {
      "main": [
        [
          {
            "node": "Get State3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data2": {
      "main": [
        [
          {
            "node": "Get State2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Increment Index1": {
      "main": [
        [
          {
            "node": "Is Survey Continue?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Interview Agent1": {
      "main": [
        [
          {
            "node": "Update Answer2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Set Variables1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append Responses1": {
      "main": [
        [
          {
            "node": "Should Follow Up?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Survey State1": {
      "main": [
        [
          {
            "node": "Increment Index1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Next Question": {
      "main": [
        []
      ]
    },
    "Should Follow Up?1": {
      "main": [
        [
          {
            "node": "Update Answer3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Interview Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Survey Continue?": {
      "main": [
        [
          {
            "node": "Reset Agent Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Completed Survey",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reset Agent Memory1": {
      "main": [
        [
          {
            "node": "Send Next Question",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Last Bot Message1": {
      "main": [
        [
          {
            "node": "Append Responses1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}