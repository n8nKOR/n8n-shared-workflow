{
  "meta": {
    "instanceId": "408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9",
    "templateCredsSetupCompleted": true
  },
  "nodes": [
    {
      "id": "cce90ce3-5661-4c8b-9752-71bc0e643f01",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -1880,
        -180
      ],
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "9f39b744-e3d5-4cb8-9631-d41ccb311e57",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        -840,
        -260
      ],
      "parameters": {
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "8gccIjcuf3gvaoEr",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "fd6f3243-3c94-4208-b200-511eef53f2f7",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        -700,
        -260
      ],
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "project_key",
                "value": "={{ $json.project_key }}"
              },
              {
                "name": "issue_key",
                "value": "={{ $json.issue_key }}"
              },
              {
                "name": "issue_type",
                "value": "={{ $json.issue_type }}"
              },
              {
                "name": "created_at",
                "value": "={{ $json.created_date }}"
              },
              {
                "name": "resolved_at",
                "value": "={{ $json.resolution_date }}"
              },
              {
                "name": "assignee_id",
                "value": "={{ $json.assignee_id }}"
              },
              {
                "name": "assignee_name",
                "value": "={{ $json.assignee_name }}"
              },
              {
                "name": "issue_title",
                "value": "={{ $json.title }}"
              }
            ]
          }
        },
        "jsonData": "=# {{ $json.title }}\n- created {{ $json.created_date }}\n- resolved {{ $json.resolution_date }}\n\n## description\n{{ $json.description }}",
        "jsonMode": "expressionData"
      },
      "typeVersion": 1
    },
    {
      "id": "d577536e-bee5-45ea-929e-951f4a255462",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        -600,
        -140
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "5fb95703-27aa-4ae3-b220-b2cca3596e0d",
      "name": "Issues Similarity Database",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "position": [
        -840,
        -440
      ],
      "parameters": {
        "mode": "insert",
        "options": {},
        "tableName": {
          "__rl": true,
          "mode": "list",
          "value": "documents",
          "cachedResultName": "documents"
        }
      },
      "credentials": {
        "supabaseApi": {
          "id": "AkI6FZYwHrf8n5Zw",
          "name": "Supabase(jira-issues-similarity-database)"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "94d53f32-7f01-487f-b1a3-0dc15f8dc673",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "position": [
        -540,
        500
      ],
      "parameters": {
        "mode": "retrieve-as-tool",
        "topK": 20,
        "options": {},
        "toolName": "get_similar_issues",
        "tableName": {
          "__rl": true,
          "mode": "list",
          "value": "documents",
          "cachedResultName": "documents"
        },
        "toolDescription": "Call this tool to find similar issues but which are resolved and by whom."
      },
      "credentials": {
        "supabaseApi": {
          "id": "AkI6FZYwHrf8n5Zw",
          "name": "Supabase(jira-issues-similarity-database)"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "d1c88dcd-62ef-4bb8-86d4-1ef294bb063d",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        -460,
        620
      ],
      "parameters": {
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "8gccIjcuf3gvaoEr",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "a23442f6-c701-4b47-aea4-8764adab3d8d",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -680,
        500
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "8gccIjcuf3gvaoEr",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "d07139dd-9df4-4e95-a0b0-4e28054b62c9",
      "name": "Find Similar Issues + Assignees",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -660,
        300
      ],
      "parameters": {
        "text": "=# {{ $json.fields.summary }}\n\n## description\n{{ $json.fields.description }}",
        "options": {
          "systemMessage": "You are a project management assistant helping to assign stale JIRA issues to team members. To find out who best to assign the issue to, you must first find similar JIRA issues in terms of problem and context and attain the team members who resolved them. The logic is that these team members are likely to be best suited to take on the issue since they've tackled similar issues before.\n\nIn your response, for each matching issue, list the following:\n* issue_key\n* assignee_id\n* assignee_name"
        },
        "promptType": "define"
      },
      "typeVersion": 1.7
    },
    {
      "id": "c28e06eb-a8bd-4abc-821d-5efee7bbdf99",
      "name": "Check User Workflow",
      "type": "n8n-nodes-base.jira",
      "position": [
        880,
        580
      ],
      "parameters": {
        "options": {
          "jql": "=status = \"In Progress\"\nAND assignee = \"{{ $json.assignee_id }}\""
        },
        "operation": "getAll"
      },
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "IH5V74q6PusewNjD",
          "name": "Jira SW Cloud account"
        }
      },
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "id": "6bcad177-dc47-42f3-893d-5d64f28b8d75",
      "name": "For Each User",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        680,
        380
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 3
    },
    {
      "id": "5112d1da-464a-42e9-9d76-1e6064f1ebfc",
      "name": "Assign User to Ticket",
      "type": "n8n-nodes-base.jira",
      "position": [
        1520,
        620
      ],
      "parameters": {
        "issueKey": "={{ $('Issue Ref').item.json.key }}",
        "operation": "update",
        "updateFields": {
          "assignee": {
            "__rl": true,
            "mode": "id",
            "value": "={{ $json.assignee_id }}"
          }
        }
      },
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "IH5V74q6PusewNjD",
          "name": "Jira SW Cloud account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "4063032d-5103-4b24-b04c-db3e1ba1002f",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -1520,
        300
      ],
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "44a07e61-6edd-4beb-b7e3-4c7474cb620f",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        -1380,
        -220
      ],
      "parameters": {
        "options": {},
        "operation": "removeItemsSeenInPreviousExecutions",
        "dedupeValue": "={{ $json.key }}"
      },
      "typeVersion": 2
    },
    {
      "id": "1084ffd4-99a6-4a10-a209-1c6c83d0df02",
      "name": "Collect Fields",
      "type": "n8n-nodes-base.set",
      "position": [
        -1200,
        -220
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "d68a1967-a68e-49cf-9a7c-bd2093dd953d",
              "name": "project_key",
              "type": "string",
              "value": "={{ $json.fields.project.key }}"
            },
            {
              "id": "16dcfcff-4dc9-4cca-bd65-6631533e6438",
              "name": "issue_key",
              "type": "string",
              "value": "={{ $json.key }}"
            },
            {
              "id": "645b7ba5-440d-45cc-9051-b58fac3cf8b6",
              "name": "issue_type",
              "type": "string",
              "value": "={{ $json.fields.issuetype.name }}"
            },
            {
              "id": "26863d50-042a-41bb-9579-5af24ed291cb",
              "name": "created_date",
              "type": "string",
              "value": "={{ $json.fields.created }}"
            },
            {
              "id": "231d153f-a189-4d16-a2c1-77a3de8bfba4",
              "name": "resolution_date",
              "type": "string",
              "value": "={{ $json.fields.resolutiondate }}"
            },
            {
              "id": "46c67aaf-6731-4890-800b-7a3361b1c7f0",
              "name": "assignee_id",
              "type": "string",
              "value": "={{ $json.fields.assignee.accountId }}"
            },
            {
              "id": "48103da0-3c14-442a-9b5b-711f720373c7",
              "name": "assignee_name",
              "type": "string",
              "value": "={{ $json.fields.assignee.displayName }}"
            },
            {
              "id": "1b3de52c-c558-4b76-87dd-2a6874789254",
              "name": "title",
              "type": "string",
              "value": "={{ $json.fields.summary }}"
            },
            {
              "id": "29091123-2d60-4345-8443-34e3a1d4dff0",
              "name": "description",
              "type": "string",
              "value": "={{ $json.fields.description }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "5109b7f5-61e1-4634-b29c-276c9c4fff23",
      "name": "Get Unassigned Tickets more than 5 days",
      "type": "n8n-nodes-base.jira",
      "position": [
        -1340,
        300
      ],
      "parameters": {
        "options": {
          "jql": "=project = \"My Kanban Project\"\nAND status = \"To Do\"\nAND assignee IS EMPTY\nAND assignee CHANGED BEFORE -5d"
        },
        "operation": "getAll"
      },
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "IH5V74q6PusewNjD",
          "name": "Jira SW Cloud account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "7fcd1b7e-4bcd-4d09-b306-dd5b5de685e0",
      "name": "For Each Issue",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -1040,
        300
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 3
    },
    {
      "id": "eed6d212-daae-49ee-81e9-0b550cb3a34c",
      "name": "Issue Ref",
      "type": "n8n-nodes-base.noOp",
      "position": [
        -840,
        300
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "041949bc-ad09-45bb-acc0-915092cde6ad",
      "name": "Add Comment to Issue",
      "type": "n8n-nodes-base.jira",
      "position": [
        1700,
        620
      ],
      "parameters": {
        "comment": "=Auto-assigned to {{ $('Count Assigned Open Issues per User').item.json.assignee_name }} due to no assignee within past 5 days.",
        "options": {},
        "issueKey": "={{ $('Issue Ref').item.json.key }}",
        "resource": "issueComment"
      },
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "IH5V74q6PusewNjD",
          "name": "Jira SW Cloud account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "ccb525d9-fc6e-47f3-ac2a-dde4c266962b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1620,
        -460
      ],
      "parameters": {
        "color": 7,
        "width": 580,
        "height": 460,
        "content": "## 1. 해결된 문제 가져오기\n\n[JIRA 노드에 대해 자세히 알아보기](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.jira/)\n\n성공적으로 해결된 문제의 데이터베이스를 구축하기 위해, JQL 쿼리를 사용하여 JIRA에서 직접 가져올 수 있습니다. 중복 제거 노드가 데이터베이스에 문제를 한 번만 추가하도록 보장합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "c4868156-e663-46b1-8979-b561dcb0620b",
      "name": "Last 50 Resolved",
      "type": "n8n-nodes-base.jira",
      "position": [
        -1560,
        -220
      ],
      "parameters": {
        "options": {
          "jql": "=project = \"My Kanban Project\"\nAND status = \"Done\"\nAND assignee IS NOT EMPTY\nAND created >= -1d"
        },
        "operation": "getAll"
      },
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "IH5V74q6PusewNjD",
          "name": "Jira SW Cloud account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "bdf6c882-7a91-485a-9f75-4c27ba5b936c",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        -660
      ],
      "parameters": {
        "color": 7,
        "width": 660,
        "height": 660,
        "content": "## 2. 벡터 데이터베이스에서 검색 인덱스 생성\n\n[Supabase Vector Store에 대해 더 알아보기](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoresupabase)\n\nSupabase는 타사 데이터베이스 제공자로, 전통적인 PostgreSQL을 제공하며, Pg-Vector 확장을 통해 벡터 데이터베이스를 지원합니다. 초기 설정이 필요하지만, Supabase의 [Langchain 퀵스타트 방법](https://supabase.com/docs/guides/ai/langchain?database-method=sql)을 통해 쉽게 할 수 있습니다."
      },
      "typeVersion": 1
    },
    {
      "id": "806a7ac1-999b-49f7-94b4-386341a2a4e1",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1620,
        80
      ],
      "parameters": {
        "color": 7,
        "width": 500,
        "height": 460,
        "content": "## 3. 오래된 할당되지 않은 문제 감지\n\n[스케줄드 트리거에 대해 더 읽기](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/)\n\n여기서, 우리는 스케줄드 트리거를 사용하여 오래된 문제를 감지하고 있습니다. 오래된 것은 5일 이상 할당되지 않은 문제를 의미합니다. 이러한 문제를 빠뜨리지 않기 위해, 관련성에 따라 팀 멤버에게 자동 할당할 수 있는지 살펴보겠습니다."
      },
      "typeVersion": 1
    },
    {
      "id": "28c2f824-868d-4b0b-b362-7cfa31ad23d6",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -860,
        80
      ],
      "parameters": {
        "color": 7,
        "width": 1380,
        "height": 700,
        "content": "## 4. 해결된 유사 문제를 찾기\n\n[AI 에이전트에 대해 더 알아보기](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/)\n\n첫 번째 단계는 유사하지만 해결된 문제를 찾는 것입니다. 논리는 다음과 같습니다: 이러한 문제를 찾으면, 이를 해결한 팀원은 현재의 정체된 문제를 다루는 데 맥락과 경험 측면에서 가장 적합한 사람이 될 것입니다. 여기서, 이 목적으로 해결된 문제의 벡터 저장소 데이터베이스를 다시 활용합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "91134c07-9df5-4a01-ab69-b9461698e260",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        540,
        120
      ],
      "parameters": {
        "color": 7,
        "width": 800,
        "height": 720,
        "content": "## 5. 가장 여유로운 지식 있는 팀 멤버를 파악하세요  \n[Summarize 노드에 대해 더 알아보기](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.summarize/)  \n\n유사한 해결된 문제를 찾았다면, 그 문제의 마지막 담당자를 오래된 문제에 할당할 수 있는 후보로 식별할 수 있습니다. 하지만 그렇게 하기 전에, 팀 멤버가 현재 할당된 개방된 문제의 수를 빠르게 확인할 수 있습니다. 가장 적은 수의 문제를 가진 팀 멤버를 선택하거나, 다른 말로 가장 여유로운 팀 멤버를 선택합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "3a7e0c75-148d-4bef-ab2a-ef2246c369d6",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1380,
        360
      ],
      "parameters": {
        "color": 7,
        "width": 560,
        "height": 480,
        "content": "## 6. 낡은 이슈를 팀 멤버에게 자동 할당  \n[JIRA 노드에 대해 더 알아보기](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.jira/)  \n\n마침내, 우리는 낡은 이슈에 팀 멤버를 자동 할당하고 댓글을 남길 것입니다. 이것은 할당할 수 있는 모든 낡은 이슈가 할당될 때까지 계속됩니다."
      },
      "typeVersion": 1
    },
    {
      "id": "9af64316-0380-4a23-8935-a58a829e9064",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -200,
        440
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "8gccIjcuf3gvaoEr",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "f67f4290-b7f7-4034-9c78-3ff38cbb256f",
      "name": "Issues to Items",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        20,
        300
      ],
      "parameters": {
        "options": {},
        "fieldToSplitOut": "output"
      },
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "id": "20582918-7638-4b07-8aec-ad30412b2879",
      "name": "To Structured Output",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        -300,
        300
      ],
      "parameters": {
        "text": "={{ $json.output }}",
        "options": {},
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"required\": [\"issue_key\",\"assignee_id\",\"assignee_name\"],\n        \"properties\": {\n            \"issue_key\": { \"type\": \"string\" },\n            \"assignee_id\": { \"type\": \"string\" },\n            \"assignee_name\": { \"type\": \"string\" }\n        }\n    }\n}"
      },
      "typeVersion": 1
    },
    {
      "id": "bd950805-811f-49d0-9a32-a54cf647e819",
      "name": "Count Assigned Open Issues per User",
      "type": "n8n-nodes-base.summarize",
      "position": [
        880,
        380
      ],
      "parameters": {
        "options": {},
        "fieldsToSplitBy": "assignee_id",
        "fieldsToSummarize": {
          "values": [
            {
              "field": "in_progress"
            }
          ]
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "fddbc5de-21a2-434e-ab1c-c6b06d96d2c7",
      "name": "Tally In-Progress Issues per User",
      "type": "n8n-nodes-base.set",
      "position": [
        1080,
        580
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "48221b51-ef3a-4e62-ba13-8a305e8787e9",
              "name": "assignee_id",
              "type": "string",
              "value": "={{ $('For Each User').item.json.assignee_id }}"
            },
            {
              "id": "60b212ff-8ad3-414b-8aac-e93dbeb1f359",
              "name": "in_progress",
              "type": "string",
              "value": "={{ $json.isNotEmpty() ? 1 : 2 }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "1bde2079-2c61-4024-889e-178afede1bf4",
      "name": "Sort By Most Capacity",
      "type": "n8n-nodes-base.sort",
      "position": [
        1080,
        380
      ],
      "parameters": {
        "options": {},
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "count_in_progress"
            }
          ]
        }
      },
      "typeVersion": 1
    },
    {
      "id": "22691a79-fa71-40b6-b4f8-bcd82864dce5",
      "name": "If has Items?",
      "type": "n8n-nodes-base.if",
      "position": [
        180,
        300
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "5366f6f7-68e6-4bd8-ba8e-030abdbf34e3",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "8030303e-97ce-4ab2-8f3f-ae44f82c6815",
      "name": "Skip",
      "type": "n8n-nodes-base.noOp",
      "position": [
        340,
        620
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "6245bd37-15ce-4c3c-9430-8708e5be5b13",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -60,
        620
      ],
      "parameters": {
        "color": 5,
        "width": 360,
        "height": 120,
        "content": "비슷한 문제가 발견되지 않으면?\n이것은 이 템플릿의 범위를 벗어나므로 이 문제를 건너뛰겠지만, 이 상황에서 프로젝트 관리자에게 에스컬레이션하는 것을 고려할 수 있습니다."
      },
      "typeVersion": 1
    },
    {
      "id": "8919a9c2-063e-4d69-977b-e0c3f1e28c50",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2140,
        -1080
      ],
      "parameters": {
        "width": 480,
        "height": 1080,
        "content": "## 시도해 보세요  \n### 이 n8n 템플릿은 JIRA 이슈가 일주일 이상 할당되지 않도록 간단한 자동화를 구축하여 빠지게 되는 것을 방지합니다. AI를 사용하여 Supabase Vector Store에 대한 검색 작업을 수행합니다.  \n이것은 바쁜 팀이 최소한의 노력으로 이슈 백로그 관리를 줄이는 한 가지 방법입니다.  \n\n### 작동 원리  \n* 이 템플릿에는 스케줄 트리거를 통해 지속적으로 실행되는 2개의 별도 흐름이 포함되어 있습니다.  \n* 첫 번째 흐름은 전날 해결된 이슈를 Supabase 벡터 저장소에 채웁니다. 이는 유사한 이슈를 찾기 위한 목적으로 벡터 저장소를 최신 상태로 유지합니다.  \n* 이를 위해 JIRA에서 최신 해결된 이슈를 가져와서 신중하게 선택된 메타데이터와 함께 Supabase 벡터 저장소를 채웁니다. 이는 나중에 유용합니다.  \n* 두 번째 흐름은 낡은 할당되지 않은 이슈를 감시하여 관련 팀원에게 자동 할당합니다.  \n* 이를 위해 낡은 이슈를 해결된 이슈의 벡터 저장소와 비교하여 이슈에 대해 가장 잘 이해할 수 있는 팀원을 식별합니다.  \n* 바쁜 팀의 경우 여러 팀원이 후보로 나올 수 있으므로, 각 팀원의 할당된 진행 중 이슈 수를 세는 추가 로직을 도입합니다. 이는 가장 바쁜 팀원을 과부하되지 않게 하기 위한 것입니다.  \n* 할당된 이슈가 가장 적은 팀원은 가장 많은 여유가 있다고 가정하고 할당됩니다. 이슈에 댓글을 남겨 팀원이 이슈의 나이 때문에 자동 할당되었음을 알립니다.  \n\n### 사용 방법  \n* 프로젝트와 간격 매개변수를 사용 사례와 팀원에 맞게 수정합니다.  \n* 팀원 할당 전에 추가 기준(예: 부서)을 필요에 따라 추가합니다.  \n\n### 도움이 필요하신가요?  \n[Discord](https://discord.com/invite/XPKeKXeB7d) 커뮤니티에 참여하거나 [Forum](https://community.n8n.io/)에서 문의하세요!  \n\n즐거운 해킹!"
      },
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Skip": {
      "main": [
        [
          {
            "node": "For Each Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Issue Ref": {
      "main": [
        [
          {
            "node": "Find Similar Issues + Assignees",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "For Each User": {
      "main": [
        [
          {
            "node": "Count Assigned Open Issues per User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check User Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If has Items?": {
      "main": [
        [
          {
            "node": "For Each User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Skip",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Collect Fields": {
      "main": [
        [
          {
            "node": "Issues Similarity Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "For Each Issue": {
      "main": [
        [],
        [
          {
            "node": "Issue Ref",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Issues to Items": {
      "main": [
        [
          {
            "node": "If has Items?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Last 50 Resolved": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Last 50 Resolved",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Issues Similarity Database",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Find Similar Issues + Assignees",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Collect Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get Unassigned Tickets more than 5 days",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "To Structured Output",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Check User Workflow": {
      "main": [
        [
          {
            "node": "Tally In-Progress Issues per User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Issues Similarity Database",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Add Comment to Issue": {
      "main": [
        [
          {
            "node": "For Each Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "To Structured Output": {
      "main": [
        [
          {
            "node": "Issues to Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assign User to Ticket": {
      "main": [
        [
          {
            "node": "Add Comment to Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort By Most Capacity": {
      "main": [
        [
          {
            "node": "Assign User to Ticket",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "Find Similar Issues + Assignees",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Find Similar Issues + Assignees": {
      "main": [
        [
          {
            "node": "To Structured Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Tally In-Progress Issues per User": {
      "main": [
        [
          {
            "node": "For Each User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count Assigned Open Issues per User": {
      "main": [
        [
          {
            "node": "Sort By Most Capacity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Unassigned Tickets more than 5 days": {
      "main": [
        [
          {
            "node": "For Each Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}