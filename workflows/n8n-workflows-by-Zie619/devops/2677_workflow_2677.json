{
  "meta": {
    "instanceId": "03e9d14e9196363fe7191ce21dc0bb17387a6e755dcc9acc4f5904752919dca8"
  },
  "nodes": [
    {
      "id": "05096721-e15a-4d2a-83b3-3b31d6435c59",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "disabled": true,
      "position": [
        -680,
        -140
      ],
      "parameters": {
        "simple": false,
        "filters": {},
        "options": {},
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      },
      "credentials": {
        "gmailOAuth2": {
          "id": "kkhNhqKpZt6IUZd0",
          "name": "Gmail"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "9eb59c41-fa15-45ee-b343-cf30ac058600",
      "name": "Gmail - Extract Received Headers",
      "type": "n8n-nodes-base.code",
      "position": [
        200,
        -80
      ],
      "parameters": {
        "jsCode": "// Extract the headers object from the JSON\nconst headers = $('Gmail - Set Headers').item.json.headers;\n\n// Find all keys that start with \"received\" (case-insensitive)\nconst receivedHeaders = Object.entries(headers)\n    .filter(([key, value]) => key.toLowerCase() === 'received')\n    .map(([key, value]) => ({ key, value }));\n\n// Return each header as an object\nreturn receivedHeaders.map(header => ({ json: header }));\n"
      },
      "executeOnce": false,
      "typeVersion": 2
    },
    {
      "id": "05ba1e0a-1f47-492b-b57c-c82b2b8af99d",
      "name": "Gmail - Extract Original From IP",
      "type": "n8n-nodes-base.set",
      "position": [
        620,
        -80
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "5f740d1f-de62-4fe0-aa20-625063344c07",
              "name": "extractedfromip",
              "type": "string",
              "value": "={{ $json.value.replace(/\\b(127\\.(?:\\d{1,3}\\.){2}\\d{1,3})|(10\\.(?:\\d{1,3}\\.){2}\\d{1,3})|(172\\.(?:1[6-9]|2[0-9]|3[0-1])\\.\\d{1,3}\\.\\d{1,3})|(192\\.168\\.\\d{1,3}\\.\\d{1,3})\\b/g, \"\").match(/(\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(%.+)?\\s*)|(\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[.]){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b)/)[0] }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "86bdebd4-fa96-4622-bc9d-67cea96486a4",
      "name": "Gmail - Original IP Found?",
      "type": "n8n-nodes-base.if",
      "position": [
        840,
        -20
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "1c27e7ba-d243-4673-b1cc-608c35951168",
              "operator": {
                "type": "boolean",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.extractedfromip?.toBoolean() }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "18c23866-58fc-4cdb-9bea-961da75dbac5",
      "name": "Gmail - Query IP Quality Score API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1080,
        -160
      ],
      "parameters": {
        "url": "=https://ipqualityscore.com/api/json/ip/Mlg6aZdzI1mVehUD3Z5Ak5Vl4yNN7P8v/{{ $('Gmail - Extract Original From IP').item.json.extractedfromip }}?strictness=1&allow_public_access_points=true&lighter_penalties=true",
        "options": {}
      },
      "typeVersion": 4.2
    },
    {
      "id": "9b35ce2c-d382-41b2-8e31-3238cc7c83bc",
      "name": "Gmail - Query IP API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1280,
        -160
      ],
      "parameters": {
        "url": "=http://ip-api.com/json/{{ $('Gmail - Extract Original From IP').item.json.extractedfromip }}",
        "options": {}
      },
      "typeVersion": 4.2
    },
    {
      "id": "dbd95b55-f54a-477e-bdfe-4fd564b71154",
      "name": "Gmail - Authentication-Results Header?",
      "type": "n8n-nodes-base.if",
      "position": [
        1480,
        -20
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "ead2b640-ad80-4189-a692-ae454723fd85",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ Object.entries($('Gmail - Set Headers').item.json.headers)\n    .filter(([key, value]) => key.toLowerCase() === 'authentication-results')\n    .map(([key, value]) => ({ key, value })) }}",
              "rightValue": "true"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "972aee72-e5fd-4215-91d5-ea099b0ce379",
      "name": "Gmail - Received-SPF Header?",
      "type": "n8n-nodes-base.if",
      "position": [
        1820,
        620
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "a38ebc9b-f896-4432-81fb-4f3db98f3409",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ Object.entries($('Gmail - Set Headers').item.json.headers)\n    .filter(([key, value]) => key.toLowerCase() === 'received-spf')\n    .map(([key, value]) => ({ key, value })) }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "814810d9-46d4-4c4b-8b48-09504b39bab9",
      "name": "Gmail - Extract Authentication-Results Header",
      "type": "n8n-nodes-base.code",
      "position": [
        1840,
        -180
      ],
      "parameters": {
        "jsCode": "// Extract the headers object from the JSON\nconst headers = $('Gmail - Set Headers').item.json.headers;\n\n// Find all keys that start with \"received\" (case-insensitive)\nconst receivedHeaders = Object.entries(headers)\n    .filter(([key, value]) => key.toLowerCase() === 'authentication-results')\n    .map(([key, value]) => ({ key, value }));\n\n// Return each header as an object\nreturn receivedHeaders.map(header => ({ json: header }));\n"
      },
      "executeOnce": false,
      "typeVersion": 2
    },
    {
      "id": "98fd0bec-db8c-41bf-b5da-b485872366a5",
      "name": "Gmail - Extract Received-SPF Header",
      "type": "n8n-nodes-base.code",
      "position": [
        2160,
        460
      ],
      "parameters": {
        "jsCode": "// Extract the headers object from the JSON\nconst headers = $('Gmail - Set Headers').item.json.headers;\n\n// Find all keys that start with \"received\" (case-insensitive)\nconst receivedHeaders = Object.entries(headers)\n    .filter(([key, value]) => key.toLowerCase() === 'received-spf')\n    .map(([key, value]) => ({ key, value }));\n\n// Return each header as an object\nreturn receivedHeaders.map(header => ({ json: header }));\n"
      },
      "executeOnce": false,
      "typeVersion": 2
    },
    {
      "id": "6c893235-19dd-40fb-860d-368de317907b",
      "name": "Gmail - Determine Auth Values",
      "type": "n8n-nodes-base.set",
      "position": [
        2560,
        -180
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "cd0b3f49-fe38-4686-a1f5-bc03a145adef",
              "name": "spfvalue",
              "type": "string",
              "value": "={{ $json.value.toLowerCase().includes('spf=pass') ? \"pass\" : $json.value.toLowerCase().includes('spf=fail') ? \"fail\" : $json.value.toLowerCase().includes('spf=neutral') ? \"neutral\" : \"unknown\" }}"
            },
            {
              "id": "6aa90f4d-773e-475f-8cbc-fe5c4fe93653",
              "name": "dkimvalue",
              "type": "string",
              "value": "={{ $json.value.toLowerCase().includes('dkim=pass') ? \"pass\" : $json.value.toLowerCase().includes('dkim=fail') ? \"fail\" : $json.value.toLowerCase().includes('dkim=temperror') ? \"error\" : \"unknown\" }}"
            },
            {
              "id": "d3b7b0c1-0680-4cb9-b376-d365e5602a29",
              "name": "dmarcvalue",
              "type": "string",
              "value": "={{ $json.value.toLowerCase().includes('dmarc=pass') ? \"pass\" : $json.value.toLowerCase().includes('dmarc=fail') ? \"fail\" : \"unknown\" }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "66203758-da3b-499a-a95e-2e04f196fc30",
      "name": "Gmail - Set SPF Value",
      "type": "n8n-nodes-base.set",
      "position": [
        2600,
        460
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "179c48eb-97e5-48ab-82b8-ef4269f11366",
              "name": "spfvalue",
              "type": "string",
              "value": "={{ $json.data.last().value.toLowerCase().includes('fail') ? \"fail\" : $json.data.last().value.toLowerCase().includes('pass') ? \"pass\" : \"unknown\"}}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "8393c205-673a-46d7-977e-9a60720b1c39",
      "name": "Gmail - No SPF Found",
      "type": "n8n-nodes-base.set",
      "position": [
        2600,
        640
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "ae3158bf-3d91-4a61-a58c-c151362e52d7",
              "name": "spfvalue",
              "type": "string",
              "value": "not found"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "2d7c752a-32cf-4c2c-9e59-e703b0b22ee9",
      "name": "Gmail - Format Output",
      "type": "n8n-nodes-base.set",
      "position": [
        3520,
        100
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": []
        },
        "includeOtherFields": true
      },
      "typeVersion": 3.4
    },
    {
      "id": "08b8b071-a94e-43d6-b7a0-85c101630a5c",
      "name": "Gmail - DKIM Signature Found",
      "type": "n8n-nodes-base.set",
      "position": [
        2600,
        820
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "ae3158bf-3d91-4a61-a58c-c151362e52d7",
              "name": "dkimvalue",
              "type": "string",
              "value": "=found"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "e90d4a39-7bd7-4475-a5fa-1a31077004d9",
      "name": "Gmail - DKIM-Signature Header?",
      "type": "n8n-nodes-base.if",
      "position": [
        1820,
        900
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "a38ebc9b-f896-4432-81fb-4f3db98f3409",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ Object.entries($('Gmail - Set Headers').item.json.headers)\n    .filter(([key, value]) => key.toLowerCase() === 'dkim-signature')\n    .map(([key, value]) => ({ key, value })) }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "c8136c1a-7fcd-4301-a36d-d27fb535c868",
      "name": "Gmail - No DKIM Signature Found",
      "type": "n8n-nodes-base.set",
      "position": [
        2600,
        1020
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "ae3158bf-3d91-4a61-a58c-c151362e52d7",
              "name": "dkimvalue",
              "type": "string",
              "value": "not found"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "84f3ddb5-9a52-45ed-bb98-c88145b69d9a",
      "name": "Gmail - Set DMARC Value",
      "type": "n8n-nodes-base.set",
      "position": [
        2600,
        1240
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "179c48eb-97e5-48ab-82b8-ef4269f11366",
              "name": "spfvalue",
              "type": "string",
              "value": "={{ $json.value.toLowerCase().includes('pass') ? \"pass\" : $json.value.toLowerCase().includes('fail') ? \"fail\" : \"unknown\"}}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "4ac86848-09db-47a0-afed-20aa92e86ff8",
      "name": "Gmail - Extract DMARC Header",
      "type": "n8n-nodes-base.code",
      "position": [
        2260,
        1240
      ],
      "parameters": {
        "jsCode": "// Extract the headers object from the JSON\nconst headers = $('Gmail - Set Headers').item.json.headers;\n\n// Find all keys that start with \"received\" (case-insensitive)\nconst receivedHeaders = Object.entries(headers)\n    .filter(([key, value]) => key.toLowerCase() === 'dmarc')\n    .map(([key, value]) => ({ key, value }));\n\n// Return each header as an object\nreturn receivedHeaders.map(header => ({ json: header }));\n"
      },
      "executeOnce": false,
      "typeVersion": 2
    },
    {
      "id": "9e80bfaf-c3f4-4ba9-acfd-c467ecf4563a",
      "name": "Gmail - DMARC Header?",
      "type": "n8n-nodes-base.if",
      "position": [
        1820,
        1340
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "a38ebc9b-f896-4432-81fb-4f3db98f3409",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ Object.entries($('Gmail - Set Headers').item.json.headers)\n    .filter(([key, value]) => key.toLowerCase() === 'dmarc')\n    .map(([key, value]) => ({ key, value })) }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "448095c0-5d26-4ab6-aae4-3a3ff568de62",
      "name": "Gmail - No DMARC Header",
      "type": "n8n-nodes-base.set",
      "position": [
        2600,
        1440
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "ae3158bf-3d91-4a61-a58c-c151362e52d7",
              "name": "dmarcvalue",
              "type": "string",
              "value": "=not found"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "a972ebae-67e6-4216-ae24-9db64906c523",
      "name": "Set Gmail Headers Here",
      "type": "n8n-nodes-base.set",
      "position": [
        -320,
        -140
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "851a621a-509a-4a10-818c-a885a053cbf6",
              "name": "headers",
              "type": "object",
              "value": "={{ $json.headers }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "46b1e8fe-c564-49a7-b38b-22b267fb6fc5",
      "name": "Format Individual Auth Outputs1",
      "type": "n8n-nodes-base.set",
      "position": [
        3280,
        100
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "1f466a9d-e8a1-4095-918c-89fd8e3dae57",
              "name": "spf",
              "type": "string",
              "value": "={{ $json.data[0].spfvalue }}"
            },
            {
              "id": "797b0e35-9a2e-4261-8741-a8d636e0d1ae",
              "name": "dkim",
              "type": "string",
              "value": "={{ $json.data[1].dkimvalue }}"
            },
            {
              "id": "8b6f9dda-081d-45b6-98a9-04a96642800b",
              "name": "dmarc",
              "type": "string",
              "value": "={{ $json.data[2].dmarcvalue }}"
            },
            {
              "id": "6d24a794-0d06-4f12-8bfb-cc3c71720a1b",
              "name": "initialIP",
              "type": "string",
              "value": "={{ $('Gmail - Extract Original From IP').item.json.extractedfromip || 'Originating IP Not Found'}}"
            },
            {
              "id": "e9ec6f54-0ef7-451b-bbeb-8bb9291e4bcd",
              "name": "organization",
              "type": "string",
              "value": "={{ $('Gmail - Query IP API').item.json.org || \"No Organization Found\" }}"
            },
            {
              "id": "719b8414-72e1-4916-855b-00abdfc8e776",
              "name": "country",
              "type": "string",
              "value": "={{ $('Gmail - Query IP API').item.json.country || \"No Country Found\" }}"
            },
            {
              "id": "ab0dc08c-ba54-4e2c-b4df-9f23d36cb350",
              "name": "city",
              "type": "string",
              "value": "={{ $('Gmail - Query IP API').item.json.city || \"No City Found\" }}"
            },
            {
              "id": "f8214eea-dfb6-4fe1-8e45-e0b8d3d44ee3",
              "name": "recentSpamActivity",
              "type": "string",
              "value": "={{ $('Gmail - Query IP Quality Score API').item.json.fraud_score>=85 ? \"Identified spam in the last 48 hours\" : $('Gmail - Query IP Quality Score API').item.json.fraud_score>=75 ? \"Identified spam in the last month\" : \"Not associated with recent spam\" }}"
            },
            {
              "id": "fe3488b2-ad00-45ad-b947-ca2dc4242363",
              "name": "ipSenderReputation",
              "type": "string",
              "value": "={{ $('Gmail - Query IP Quality Score API').item.json.fraud_score>=85 ? \"Bad\" : $('Gmail - Query IP Quality Score API').item.json.fraud_score>=75 ? \"Poor\" : $('Gmail - Query IP Quality Score API').item.json.fraud_score>=50 ? \"Suspicious\" : $('Gmail - Query IP Quality Score API').item.json.fraud_score>=11 ? \"OK\" : $('Gmail - Query IP Quality Score API').item.json.fraud_score<11 ? \"Good\" : \"Unknown\"}}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "8532b9d6-a4e2-4185-a624-26559a6449f4",
      "name": "Format Combined Auth Output1",
      "type": "n8n-nodes-base.set",
      "position": [
        3100,
        -80
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "1f466a9d-e8a1-4095-918c-89fd8e3dae57",
              "name": "spf",
              "type": "string",
              "value": "={{ $json.spfvalue }}"
            },
            {
              "id": "797b0e35-9a2e-4261-8741-a8d636e0d1ae",
              "name": "dkim",
              "type": "string",
              "value": "={{ $json.dkimvalue }}"
            },
            {
              "id": "8b6f9dda-081d-45b6-98a9-04a96642800b",
              "name": "dmarc",
              "type": "string",
              "value": "={{ $json.dmarcvalue }}"
            },
            {
              "id": "6d24a794-0d06-4f12-8bfb-cc3c71720a1b",
              "name": "initialIP",
              "type": "string",
              "value": "={{ $('Gmail - Extract Original From IP').item.json.extractedfromip || 'Originating IP Not Found'}}"
            },
            {
              "id": "e9ec6f54-0ef7-451b-bbeb-8bb9291e4bcd",
              "name": "organization",
              "type": "string",
              "value": "={{ $('Gmail - Query IP API').item.json.org || \"No Organization Found\" }}"
            },
            {
              "id": "ba720521-9c2d-4906-8567-714e411f1663",
              "name": "country",
              "type": "string",
              "value": "={{ $('Gmail - Query IP API').item.json.country || \"No Country Found\" }}"
            },
            {
              "id": "2d53a2b1-2600-4fe3-8273-8a54db4e5b87",
              "name": "city",
              "type": "string",
              "value": "={{ $('Gmail - Query IP API').item.json.city || \"No City Found\" }}"
            },
            {
              "id": "84158095-89e2-48f6-9f78-2f9e0f71fcc9",
              "name": "recentSpamActivity",
              "type": "string",
              "value": "={{ $('Gmail - Query IP Quality Score API').item.json.fraud_score>=85 ? \"Identified spam in the last 48 hours\" : $('Gmail - Query IP Quality Score API').item.json.fraud_score>=75 ? \"Identified spam in the last month\" : \"Not associated with recent spam\" }}"
            },
            {
              "id": "9907705d-5f70-4cc7-bac0-0411f4b4ea37",
              "name": "ipSenderReputation",
              "type": "string",
              "value": "={{ $('Gmail - Query IP Quality Score API').item.json.fraud_score>=85 ? \"Bad\" : $('Gmail - Query IP Quality Score API').item.json.fraud_score>=75 ? \"Poor\" : $('Gmail - Query IP Quality Score API').item.json.fraud_score>=50 ? \"Suspicious\" : $('Gmail - Query IP Quality Score API').item.json.fraud_score>=11 ? \"OK\" : $('Gmail - Query IP Quality Score API').item.json.fraud_score<11 ? \"Good\" : \"Unknown\"}}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "3e1323d4-a963-4a13-bbca-b6bb8ee5a9ce",
      "name": "Gmail - Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        -673,
        541
      ],
      "webhookId": "fb37cff7-b543-45f0-922d-4e0edcae5e43",
      "parameters": {
        "path": "fb37cff7-b543-45f0-922d-4e0edcae5e43",
        "options": {},
        "httpMethod": "POST",
        "responseMode": "responseNode"
      },
      "typeVersion": 2
    },
    {
      "id": "8938765f-c569-4935-91d7-15c555e9fb99",
      "name": "Gmail - Remove Extra Received Headers",
      "type": "n8n-nodes-base.limit",
      "position": [
        420,
        -80
      ],
      "parameters": {
        "keep": "lastItems"
      },
      "typeVersion": 1
    },
    {
      "id": "755b1716-5f63-4f5c-bc76-4bcaa7ffbb03",
      "name": "Gmail - Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        2880,
        100
      ],
      "parameters": {
        "numberInputs": 3
      },
      "typeVersion": 3
    },
    {
      "id": "19bbc6ce-feb3-49f8-b8d6-a99538810555",
      "name": "Gmail - Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        3100,
        100
      ],
      "parameters": {
        "options": {},
        "aggregate": "aggregateAllItemData"
      },
      "typeVersion": 1
    },
    {
      "id": "33625d80-1bb7-474c-935b-0878d9185a41",
      "name": "Gmail - Set Headers",
      "type": "n8n-nodes-base.set",
      "position": [
        0,
        -80
      ],
      "parameters": {
        "options": {},
        "includeOtherFields": true
      },
      "typeVersion": 3.4
    },
    {
      "id": "db297206-5433-413b-8e78-dcf5f10dc41e",
      "name": "Gmail - Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        3800,
        100
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1.1
    },
    {
      "id": "cd401445-2b7a-42c9-9bf9-b17cc12a817b",
      "name": "Aggregate Received-SPF Headers1",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        2380,
        460
      ],
      "parameters": {
        "options": {},
        "aggregate": "aggregateAllItemData"
      },
      "typeVersion": 1
    },
    {
      "id": "6863e527-bc58-438c-8c3c-87f43994ac61",
      "name": "Set Gmail Webhook Headers Here",
      "type": "n8n-nodes-base.set",
      "position": [
        -233,
        541
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "851a621a-509a-4a10-818c-a885a053cbf6",
              "name": "headers",
              "type": "object",
              "value": "={{ $json.body.headers }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "8af99afc-538f-4e5b-9d69-e3c41ee3d300",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -722.5965764931168,
        -597.9994506078199
      ],
      "parameters": {
        "color": 7,
        "width": 630.8094744668451,
        "height": 645.5004204663932,
        "content": "![](https://uploads.n8n.io/templates/gmaillogo.png)  \n## **테스트 이메일 헤더 분석 워크플로우**\n\n이 워크플로우의 이 섹션은 테스트 목적으로 설계되었으며, 타사 플랫폼의 API로 배포하기 전에 귀하의 Gmail 이메일 클라이언트와 올바르게 작동하는지 확인합니다. 프로세스는 `Gmail Trigger` 노드에서 시작되며, 이 노드는 귀하의 Gmail 인박스를 모니터링하고 새 이메일이 도착할 때마다 워크플로우를 트리거합니다.\n\n이메일이 감지되면, `Set Gmail Headers Here` 노드가 감지된 이메일에서 이메일 헤더를 추출하여 `headers`라는 객체로 표준화된 형식으로 구성합니다. 이로써 워크플로우의 후속 섹션에서 추가 처리를 위한 이메일 데이터를 준비합니다. 이러한 단계를 검증하여, 워크플로우가 올바르게 작동하는지 확인한 후에 더 넓은 용도로 통합할 수 있습니다."
      },
      "typeVersion": 1
    },
    {
      "id": "eeca8b68-8536-4131-a370-02822a8a13df",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -82,
        -524.2941123664101
      ],
      "parameters": {
        "color": 7,
        "width": 869.3564073187465,
        "height": 611.2507800793627,
        "content": "## **이메일 헤더 추출 및 처리**\n\n이 섹션은 들어오는 이메일 데이터의 헤더를 처리하여 중요한 정보를 추출합니다. 특히 발신 IP 주소를 중점으로 합니다. 워크플로는 `Gmail - Set Headers` 노드에서 시작하여 헤더를 분석할 수 있도록 준비합니다.\n\n`Gmail - Extract Received Headers` 노드는 헤더를 필터링하여 \"Received\"로 표시된 헤더를 분리합니다. 이러한 헤더는 이메일이 지나간 서버를 기록하여 이동 경로를 추적할 수 있게 합니다. 다음으로, `Gmail - Remove Extra Received Headers` 노드는 가장 최근의 \"Received\" 헤더에 초점을 맞추어, 일반적으로 이메일 발신자의 발신 IP 주소를 포함합니다.\n\n`Gmail - Extract Original From IP` 노드를 사용하여 워크플로는 정규 표현식을 적용하여 유지된 헤더에서 IP 주소를 추출하며, 내부 또는 사설 IP 주소를 제거합니다. 이렇게 하면 관련된 외부 IP 주소만 식별됩니다."
      },
      "typeVersion": 1
    },
    {
      "id": "bdabc308-6f17-413d-beb6-fde80d54140a",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        800,
        -599.6286292747894
      ],
      "parameters": {
        "color": 7,
        "width": 922.1859426288208,
        "height": 824.9161858198846,
        "content": "![](https://uploads.n8n.io/templates/ipqualityscoretemplate.png)  \n## **IP 주소 분석 및 인증 결과 확인**\n\n이 섹션은 원본 IP 주소를 분석하고 필수적인 이메일 인증 헤더의 존재를 확인합니다. `Gmail - Original IP Found?` 노드는 추출된 IP 주소가 유효하고 비어 있지 않은지 확인합니다. 유효한 경우, 워크플로가 진행됩니다. 그렇지 않으면, `Skip IP Check` 노드를 트리거하여 다음 단계로 이동합니다.\n\n`Gmail - Query IP Quality Score API` 노드는 IP의 평판을 평가하여 스팸, 사기 또는 기타 악의적인 활동과 관련된 연관성을 식별합니다. `Gmail - Query IP API` 노드는 IP의 지리적 위치 및 조직 소속과 같은 추가 세부 정보를 제공하여 분석을 보강합니다.\n\n마지막으로, `Gmail - Authentication-Results Header?` 노드는 \"Authentication-Results\" 헤더의 존재를 확인합니다. 이 헤더는 수신 이메일 서버에서 수행된 SPF, DKIM 및 DMARC 검사를 나타냅니다. 존재하는 경우, 헤더는 후속 섹션에서 추가 분석됩니다."
      },
      "typeVersion": 1
    },
    {
      "id": "164c6c86-582f-44a8-b866-8865c6d4c2e5",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1735,
        -551.4521798091497
      ],
      "parameters": {
        "color": 7,
        "width": 1016.1357697283069,
        "height": 541.7962991053803,
        "content": "## **인증 결과 추출 및 평가**\n\n워크플로우는 `Gmail - Extract Authentication-Results Header` 노드에서 계속되며, 이 노드는 인증 결과 헤더를 분리하고 파싱합니다. `Gmail - Determine Auth Values` 노드는 추출된 데이터를 처리하여 SPF, DKIM, 및 DMARC 결과를 `pass`, `fail`, `neutral`, `error`, 또는 `unknown`으로 분류합니다.\n\n`Gmail - Format Combined Auth Output` 노드는 이전 노드의 메타데이터와 함께 인증 결과를 통합합니다. 여기에는 원본 IP, 지리적 세부 정보, 조직, IP 평판, 및 스팸 활동이 포함됩니다. 이 구조화된 출력은 이메일의 합법성에 대한 포괄적인 개요를 제공하며, 외부 통합이나 보고를 위해 준비되어 있습니다."
      },
      "typeVersion": 1
    },
    {
      "id": "8019b817-c8f7-425a-b372-5ba3109f5b64",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2773,
        -500.1753788350808
      ],
      "parameters": {
        "color": 7,
        "width": 1285.8545784346588,
        "height": 759.649504764657,
        "content": "최종 섹션은 이전 노드의 결과를 통합하여 웹훅 응답을 위한 일관된 출력으로 만듭니다. `Gmail - Merge` 노드는 SPF, DKIM, 및 DMARC 평가의 데이터 스트림을 결합합니다. `Gmail - Aggregate` 노드는 데이터를 통합된 형식으로 구성합니다.\n\n`Gmail - Format Individual Auth Outputs1` 및 `Gmail - Format Combined Auth Output1` 노드는 모든 인증 결과를 포함한 구조화된 JSON 객체로 데이터를 준비합니다. 여기에는 IP 평판 및 지리적 정보와 같은 메타데이터가 포함됩니다. `Gmail - Format Output` 노드는 응답 구조를 최종화하고, `Gmail - Respond to Webhook` 노드는 응답을 요청 시스템으로 보냅니다.\n\n이것은 원활한 통합을 보장하고 외부 플랫폼에 실행 가능한 인사이트를 제공하여 이메일 분석 파이프라인을 완료합니다."
      },
      "typeVersion": 1
    },
    {
      "id": "4d7e8d8f-bd8e-4152-b375-8561b6f2d3fb",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1733,
        -1
      ],
      "parameters": {
        "color": 7,
        "width": 1016.1357697283069,
        "height": 1666.528211982754,
        "content": "![](https://uploads.n8n.io/templates/n8n.png)  \n## **SPF, DKIM 및 DMARC 준수 평가**\n\n이 섹션은 SPF, DKIM 및 DMARC 헤더에 대한 자세한 분석을 수행합니다. `Gmail - Received-SPF Header?` 노드는 \"Received-SPF\" 헤더의 존재를 식별하며, `Gmail - Extract Received-SPF Header` 및 `Aggregate Received-SPF Headers1` 노드는 SPF 유효성 검사 결과를 추출하고 분석합니다. `Gmail - Set SPF Value` 노드는 SPF 상태를 기록하고, `Gmail - No SPF Found` 노드는 헤더가 없는 경우를 처리합니다.\n\n마찬가지로, `Gmail - DKIM-Signature Header?` 노드는 DKIM 서명을 확인합니다. 발견되면, `Gmail - DKIM Signature Found` 노드는 그 존재를 기록합니다. 그렇지 않으면, `Gmail - No DKIM Signature Found` 노드가 그 부재를 처리합니다.\n\n`Gmail - DMARC Header?` 노드는 DMARC 정책 헤더를 평가하며, 결과는 `Gmail - Extract DMARC Header`에 의해 추출되거나 `Gmail - No DMARC Header` 노드에 의해 부재로 기록됩니다."
      },
      "typeVersion": 1
    },
    {
      "id": "544764a9-35f1-4a42-a9c7-b97f6c09314e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -721.3492584351117,
        60
      ],
      "parameters": {
        "color": 7,
        "width": 625.8275790033185,
        "height": 660.0846008994936,
        "content": "![](https://uploads.n8n.io/templates/n8n.png)  \n## **프로덕션용 웹훅 통합**\n\n이 섹션은 워크플로를 프로덕션으로 전환하여, 타사 플랫폼에서 수신된 이메일 헤더를 분석하는 API로 기능하게 합니다. 이 웹훅 기능을 이용하기 위해, 워크플로를 **활성화**하는 것이 필수적입니다. 웹훅은 워크플로가 활성화된 상태에서만 응답하기 때문입니다.\n\n`Gmail - 웹훅` 노드는 지정된 경로에서 들어오는 HTTP POST 요청을 수신합니다. 웹훅이 트리거되면, 타사 플랫폼에서 보내진 헤더를 포함한 이메일 데이터를 포함한 페이로드를 수신하고 처리합니다. `Gmail 웹훅 헤더를 여기서 설정` 노드는 페이로드의 본문에서 `headers` 배열을 추출하여, 들어오는 데이터가 올바르게 형식화되어 후속 단계에서 처리될 수 있도록 합니다.\n\n워크플로를 활성화하고 외부 시스템과 통합하여, 사용자는 프로덕션 환경에서 이메일 헤더 분석을 원활하게 자동화할 수 있습니다."
      },
      "typeVersion": 1
    },
    {
      "id": "fe9bb5cc-8bbd-4929-9bbe-8a78adce5434",
      "name": "Skip IP Check",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1160,
        80
      ],
      "parameters": {},
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail - Merge": {
      "main": [
        [
          {
            "node": "Gmail - Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Set Gmail Headers Here",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip IP Check": {
      "main": [
        [
          {
            "node": "Gmail - Authentication-Results Header?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Webhook": {
      "main": [
        [
          {
            "node": "Set Gmail Webhook Headers Here",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Aggregate": {
      "main": [
        [
          {
            "node": "Format Individual Auth Outputs1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Set Headers": {
      "main": [
        [
          {
            "node": "Gmail - Extract Received Headers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - No SPF Found": {
      "main": [
        [
          {
            "node": "Gmail - Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Query IP API": {
      "main": [
        [
          {
            "node": "Gmail - Authentication-Results Header?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - DMARC Header?": {
      "main": [
        [
          {
            "node": "Gmail - Extract DMARC Header",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gmail - No DMARC Header",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Format Output": {
      "main": [
        [
          {
            "node": "Gmail - Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Set SPF Value": {
      "main": [
        [
          {
            "node": "Gmail - Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Gmail Headers Here": {
      "main": [
        [
          {
            "node": "Gmail - Set Headers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - No DMARC Header": {
      "main": [
        [
          {
            "node": "Gmail - Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Gmail - Set DMARC Value": {
      "main": [
        [
          {
            "node": "Gmail - Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Gmail - Original IP Found?": {
      "main": [
        [
          {
            "node": "Gmail - Query IP Quality Score API",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Skip IP Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Combined Auth Output1": {
      "main": [
        [
          {
            "node": "Gmail - Format Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - DKIM Signature Found": {
      "main": [
        [
          {
            "node": "Gmail - Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Gmail - Extract DMARC Header": {
      "main": [
        [
          {
            "node": "Gmail - Set DMARC Value",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Received-SPF Header?": {
      "main": [
        [
          {
            "node": "Gmail - Extract Received-SPF Header",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gmail - No SPF Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Determine Auth Values": {
      "main": [
        [
          {
            "node": "Format Combined Auth Output1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - DKIM-Signature Header?": {
      "main": [
        [
          {
            "node": "Gmail - DKIM Signature Found",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gmail - No DKIM Signature Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Gmail Webhook Headers Here": {
      "main": [
        [
          {
            "node": "Gmail - Set Headers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate Received-SPF Headers1": {
      "main": [
        [
          {
            "node": "Gmail - Set SPF Value",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Individual Auth Outputs1": {
      "main": [
        [
          {
            "node": "Gmail - Format Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - No DKIM Signature Found": {
      "main": [
        [
          {
            "node": "Gmail - Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Gmail - Extract Original From IP": {
      "main": [
        [
          {
            "node": "Gmail - Original IP Found?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Extract Received Headers": {
      "main": [
        [
          {
            "node": "Gmail - Remove Extra Received Headers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Query IP Quality Score API": {
      "main": [
        [
          {
            "node": "Gmail - Query IP API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Extract Received-SPF Header": {
      "main": [
        [
          {
            "node": "Aggregate Received-SPF Headers1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Remove Extra Received Headers": {
      "main": [
        [
          {
            "node": "Gmail - Extract Original From IP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Authentication-Results Header?": {
      "main": [
        [
          {
            "node": "Gmail - Extract Authentication-Results Header",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gmail - Received-SPF Header?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Gmail - DKIM-Signature Header?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Gmail - DMARC Header?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Extract Authentication-Results Header": {
      "main": [
        [
          {
            "node": "Gmail - Determine Auth Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}